"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const HeaderWrapper_1 = require("./HeaderWrapper");
class NodeResponse {
    constructor(res) {
        this.body = [];
        this.listened = false;
        this.headers = new HeaderWrapper_1.default(res.headers);
        // Status code is optionally typed, but will always be present for this
        // use case.
        this.status = res.statusCode || 0;
        this.incomingMessage = res;
        this.promise = new Promise((resolve, reject) => {
            res.on('data', (chunk) => {
                this.body.push(chunk);
            });
            res.on('error', (err) => {
                this.rejection = err;
                if (this.listened) {
                    reject(err);
                }
            });
            res.on('end', () => {
                resolve(Buffer.concat(this.body).toString());
            });
        });
    }
    async wrappedWait() {
        this.listened = true;
        if (this.rejection) {
            throw this.rejection;
        }
        return this.promise;
    }
    text() {
        return this.wrappedWait();
    }
    async json() {
        const stringValue = await this.wrappedWait();
        return JSON.parse(stringValue);
    }
}
exports.default = NodeResponse;
//# sourceMappingURL=NodeResponse.js.map