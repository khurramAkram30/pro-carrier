import {RegisterRequest} from '@shipengine/connect-carrier-api';
import {DefaultRegisterImplementation} from '../../src';

jest.mock('../../src/helpers/helper.ts');

describe('Default register implementation tests', function () {

    test('Check if response base on request. Expect metadata object same as register info', () => {
        const request: RegisterRequest = {
            transaction_id: '3124c549-2b2f-40c4-b327-9b7e417447cc',
            registration_info: {
                company_name: 'ShipEngine',
                user_name: 'ShipEngineUserName',
                password: 'ShipEnginePassword'
            }
        };

        const response = new DefaultRegisterImplementation(request, 'ShipEngineUserName', 'ShipEnginePassword');

        expect(response.metadata).toStrictEqual({
            company_name: 'ShipEngine',
            user_name: 'ShipEngineUserName',
            password: 'ShipEnginePassword'
        });
        expect(response.credentials.username).toEqual('ShipEngineUserName');
        expect(response.credentials.password).toEqual('ShipEnginePassword');
    });

    test('Check if response base on request. User name not provided. Expect guid.', () => {
            const request: RegisterRequest = {
                transaction_id: '3124c549-2b2f-40c4-b327-9b7e417447cc',
                registration_info: {
                    company_name: 'ShipEngine'
                }
            };

            const response = new DefaultRegisterImplementation(request, undefined, 'password');

            expect(response.credentials.username).toEqual('183575a5-6390-4e9d-9001-39c6e947960d');
            expect(response.credentials.password).toEqual('password');
    });

    test('Check if response base on request. Password not provided. Expect guid.', () => {
        const request: RegisterRequest = {
            transaction_id: '3124c549-2b2f-40c4-b327-9b7e417447cc',
            registration_info: {
                company_name: 'ShipEngine'
            }
        };

        const response = new DefaultRegisterImplementation(request, 'username');

        expect(response.credentials.password).toEqual('183575a5-6390-4e9d-9001-39c6e947960d');
        expect(response.credentials.username).toEqual('username');
    });

    test('Check if response base on request. UserName and Password not provided. Expect guids.', () => {
        const request: RegisterRequest = {
            transaction_id: '3124c549-2b2f-40c4-b327-9b7e417447cc',
            registration_info: {
                company_name: 'ShipEngine'
            }
        };

        const response = new DefaultRegisterImplementation(request);

        expect(response.credentials.username).toEqual('183575a5-6390-4e9d-9001-39c6e947960d');
        expect(response.credentials.password).toEqual('183575a5-6390-4e9d-9001-39c6e947960d');
    });
});