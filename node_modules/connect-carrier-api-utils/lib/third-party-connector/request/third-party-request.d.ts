import { AxiosRequestConfig } from 'axios';
import { ThirdPartyRequestProvider } from './third-party-request-provider';
import { ThirdPartyRequestQuery } from './third-party-request-query';
import { ThirdPartyRequestConfiguration } from './third-party-request-configuration';
import { ThirdPartyMethods } from '../third-party-methods';
export type RequestHeaders = Record<string, string | number | boolean>;
/**
 * Unified class to prepare request object for third party API.
 */
export declare class ThirdPartyRequest implements ThirdPartyRequestProvider, ThirdPartyRequestConfiguration {
    ThirdPartyRequestProvider: AxiosRequestConfig;
    constructor();
    /**
     * Set the request Url.
     * @param url
     * @constructor
     */
    Url: (url: string) => ThirdPartyRequest;
    /**
     * Set the request header.
     * @param header
     * @constructor
     */
    Header: (header: RequestHeaders) => ThirdPartyRequest;
    /**
     * Set the request headers.
     * @param headers
     * @constructor
     */
    Headers: (headers: RequestHeaders[]) => ThirdPartyRequest;
    /**
     * Set the request method.
     * @param method
     * @constructor
     */
    Method: (method: ThirdPartyMethods) => ThirdPartyRequest;
    /**
     * Set the request body.
     * @param body
     * @constructor
     */
    Body: (body: any) => ThirdPartyRequest;
    /**
     * Set the request query.
     * @param queryParam
     * @constructor
     */
    Query: (queryParam: ThirdPartyRequestQuery) => ThirdPartyRequest;
    /**
     * Set the request queries.
     * @param queryParam
     * @constructor
     */
    Queries: (queryParam: ThirdPartyRequestQuery[]) => ThirdPartyRequest;
}
