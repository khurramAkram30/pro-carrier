"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IsValueAllowed = exports.GetSortedPackageDimensions = void 0;
const connect_carrier_api_1 = require("@shipengine/connect-carrier-api");
/**
 *  Returns sorted package dimensions in ascending or descending order
 *
 * @param singlePackage - package to get dimensions from
 *
 * @param  isAscending - flag to determine if dimensions should be sorted in ascending or descending order, default is ascending
 *
 * @returns Array of sorted dimensions
 *  */
const GetSortedPackageDimensions = (singlePackage, isAscending = true) => {
    const dimensions = [];
    const { dimension_details } = singlePackage;
    if (dimension_details) {
        const details = dimension_details.source_dimension_unit === connect_carrier_api_1.DimensionUnit.Centimeters ? dimension_details.dimensions_in_centimeters : dimension_details.dimensions_in_inches;
        if (details) {
            const { height, width, length } = details;
            dimensions.push(height ? height : 0, width ? width : 0, length ? length : 0);
        }
    }
    else {
        return [0, 0, 0];
    }
    return dimensions.sort(isAscending ? (a, b) => a - b : (a, b) => b - a);
};
exports.GetSortedPackageDimensions = GetSortedPackageDimensions;
/**
 * Check if value is allowed from the provided values
 *
 * @param value - value to check
 *
 * @param allowedValues - allowed values
 *
 * @returns true if value is allowed
 */
const IsValueAllowed = (value, allowedValues) => Array.isArray(allowedValues) ? allowedValues.includes(value) : value === allowedValues;
exports.IsValueAllowed = IsValueAllowed;
//# sourceMappingURL=custom-validation-helper.js.map