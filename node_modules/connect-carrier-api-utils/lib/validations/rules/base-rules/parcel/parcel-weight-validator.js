"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParcelWeightValidator = void 0;
const result_1 = require("../../../result");
/** @description Basic weight validation */
class ParcelWeightValidator {
    constructor(minWeight, maxWeight) {
        this.minWeight = minWeight;
        this.maxWeight = maxWeight;
    }
    validate(request) {
        var _a;
        const packages = request.packages;
        const result = new result_1.Result();
        for (let i = 1; i <= packages.length; i++) {
            const singlePackage = packages[i - 1];
            const weightInGrams = (_a = singlePackage.weight_details) === null || _a === void 0 ? void 0 : _a.weight_in_grams;
            if (!weightInGrams) {
                result.addError('Weight in grams is undefined for shipment.');
                continue;
            }
            if (weightInGrams < this.minWeight || weightInGrams > this.maxWeight) {
                result.addError(`Parcel weight is incorrect. Weight for package number ${i} cannot exceed ${this.maxWeight} grams and have to be greater than ${this.minWeight} grams. Current value: ${weightInGrams} grams.`);
            }
        }
        return result;
    }
}
exports.ParcelWeightValidator = ParcelWeightValidator;
//# sourceMappingURL=parcel-weight-validator.js.map