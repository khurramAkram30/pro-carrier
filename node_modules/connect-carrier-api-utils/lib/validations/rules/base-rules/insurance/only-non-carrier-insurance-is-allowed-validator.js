"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OnlyNonCarrierInsuranceIsAllowedValidator = void 0;
const connect_carrier_api_1 = require("@shipengine/connect-carrier-api");
const result_1 = require("../../../result");
class OnlyNonCarrierInsuranceIsAllowedValidator {
    validate(request) {
        const selectedInsurance = request.insurance_provider;
        if (selectedInsurance != connect_carrier_api_1.InsuranceProviders.None) {
            return result_1.Result.Error('Carrier does not support insurance. Insurance can not be selected.');
        }
        return result_1.Result.Success();
    }
}
exports.OnlyNonCarrierInsuranceIsAllowedValidator = OnlyNonCarrierInsuranceIsAllowedValidator;
//# sourceMappingURL=only-non-carrier-insurance-is-allowed-validator.js.map