"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FakeShipToBuilder = void 0;
const connect_carrier_api_1 = require("@shipengine/connect-carrier-api");
const tests_data_source_1 = require("./tests-data-source");
const helpers_1 = require("../helpers");
class FakeShipToBuilder extends connect_carrier_api_1.ShipTo {
    constructor() {
        super();
        this.Build = () => {
            return this.address;
        };
        this.SetTaxId = (value) => {
            this.address.tax_identifiers = value;
            return this;
        };
        this.SetCountry = (value) => {
            this.address.country_code = value;
            return this;
        };
        this.SetPostalCode = (value) => {
            this.address.postal_code = value;
            return this;
        };
        this.SetPhoneNumber = (value) => {
            this.address.phone_number = value;
            return this;
        };
        this.SetLastName = (value) => {
            this.address.last_name = value;
            return this;
        };
        this.SetName = (value) => {
            this.address.name = value;
            return this;
        };
        this.SetFirstName = (value) => {
            this.address.first_name = value;
            return this;
        };
        this.SetCompanyName = (value) => {
            this.address.company_name = value;
            return this;
        };
        this.SetEmail = (value) => {
            this.address.email = value;
            return this;
        };
        this.SetStateProvince = (value) => {
            this.address.state_province = value;
            return this;
        };
        this.SetInstructions = (value) => {
            this.address.instructions = value;
            return this;
        };
        this.SetCity = (value) => {
            this.address.city_locality = value;
            return this;
        };
        this.SetAddressLine = (value) => {
            this.address.address_lines = value;
            return this;
        };
        this.SetDefaultAddressForSpecifiedCountry = (country) => {
            const address = (0, helpers_1.GetSafeValueFromMap)(tests_data_source_1.TESTS_ADDRESS_DATA_SOURCE, country);
            this.address.country_code = address.country_code;
            this.address.postal_code = address.postal_code;
            this.address.phone_number = address.phone_number;
            this.address.name = address.name;
            this.address.first_name = address.first_name;
            this.address.last_name = address.last_name;
            this.address.instructions = address.instructions;
            this.address.company_name = address.company_name;
            this.address.city_locality = address.city_locality;
            this.address.email = address.email;
            this.address.state_province = address.state_province;
            this.address.address_residential_indicator = address.address_residential_indicator;
            this.address.address_lines = address.address_lines;
            this.address.instructions = address.instructions;
            this.address.is_eu = address.is_eu;
            this.address.tax_identifiers = [{ id: '', type: connect_carrier_api_1.TaxIdentifierType.EORI }];
            return this;
        };
        this.address = {
            country_code: '', postal_code: ''
        };
    }
}
exports.FakeShipToBuilder = FakeShipToBuilder;
//# sourceMappingURL=fake-ship-to-builder.js.map