"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setLogger = exports.logger = void 0;
const winston_1 = require("winston");
let wasLoggerSet = false;
exports.logger = (0, winston_1.createLogger)({ silent: true });
const setLogger = (newLogger) => {
    // We only want to be setting this once per application. It's not an error if it's set again, but it's
    // not how we're intending this to be used so let's just log a warning if it happens.
    if (wasLoggerSet) {
        const message = 'setLogger has been called on an instance more than once. ' +
            'This is not expected and can lead to log messages not appearing where expected.';
        exports.logger?.warn(message);
        newLogger?.warn(message);
    }
    exports.logger = newLogger;
    wasLoggerSet = true;
};
exports.setLogger = setLogger;
//# sourceMappingURL=logger.js.map