{
  "openapi": "3.0.1",
  "info": {
    "title": "Shipping API",
    "description": "This API specification describes the canonical ShipEngine Shipping API connector module.",
    "version": "1.22.2"
  },
  "paths": {
    "/Register": {
      "post": {
        "tags": [
          "Account Setup"
        ],
        "description": "This method is used to authenticate with your application. It is responsible for verifying the supplied\r\nuser credentials and establishing or renewing a connection. The authentication information will be\r\nstored in the metadata object and will be included in all request bodies. All applications must\r\nimplement the Register method.",
        "operationId": "Register",
        "requestBody": {
          "description": "An object containing the authentication information gathered using the\r\n            connection form you created for your application. It will contain whatever fields you defined in this form.\r\n            Your method must then use this data to perform authentication with your backend service.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExampleRegisterRequest"
              },
              "example": {"registration_info":{"username":"auctane-next-day","password":"password!","meter_number":"8675309"},"transaction_id":"00000000-0000-0000-0000-000000000000","metadata":{"username":"auctane-next-day","password":"password!","meter_number":"8675309"}}
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Register method returns the result of the carrier's authentication process. This information will be included in the metadata of every subsequent request to your application.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                },
                "example": {"credentials":{"username":"auctane-next-day","password":"password!"},"metadata":{"username":"auctane-next-day","password":"password!","meter_number":"8675309"}}
              }
            }
          }
        }
      }
    },
    "/CreateLabel": {
      "post": {
        "tags": [
          "Labels"
        ],
        "description": "This method creates a new label.",
        "operationId": "CreateLabel",
        "parameters": [
          {
            "name": "transactionId",
            "in": "query",
            "description": "The transaction ID uniquely represents this request.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing information about the new label to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This object model represents the response from a successful create label request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLabelResponse"
                }
              }
            }
          }
        }
      }
    },
    "/VoidLabels": {
      "post": {
        "tags": [
          "Labels"
        ],
        "description": "This method is used to void a previously created labels.",
        "operationId": "VoidLabels",
        "requestBody": {
          "description": "An object containing information about the labels to void.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoidLabelsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This object model represents the response from a successful void labels request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoidLabelsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/CreateManifest": {
      "post": {
        "tags": [
          "Manifesting"
        ],
        "description": "This method creates an end-of-day manifest and should be implemented by carrier apps that support\r\nend-of-day manifesting.",
        "operationId": "CreateManifest",
        "requestBody": {
          "description": "An object containing information about the labels to manifest.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManifestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This object model represents the response from a successful create manifest request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateManifestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/GetManifest": {
      "post": {
        "tags": [
          "Manifesting"
        ],
        "description": "This method retrieves the end-of-day manifest created by an earlier create manifest call.\r\nThe CreateManifestRequestId returned in the CreateManifest, is used to find the manifest.",
        "operationId": "GetManifest",
        "requestBody": {
          "description": "An object containing information about the manifest request that is in progress to.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetManifestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This object model represents the response from a successful create manifest request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateManifestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ValidateInboundData": {
      "post": {
        "tags": [
          "Normalize Inbound Data"
        ],
        "description": "This method validates and then returns the type of information contained in the inbound data,\r\nsuch as tracking information\r\n            \r\nCarriers which support webhook based tracking or manifesting updates may choose to implement this endpoint\r\n            \r\nNote: Changes made to the connection meta-data will not be saved if modified",
        "operationId": "ValidateInboundData",
        "requestBody": {
          "description": "An object containing information sent by the carrier via an inbound data request (e.g. a webhook).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateInboundDataRequest"
              },
              "example": {"data":"{\"tracking_number\":\"12345678901234567890\",\"status\":11,\"timestamp\":\"2021-08-11T21:15:00Z\"}","headers":{"content-type":["application/json"],"X-Signature":["v1:cedff7d0389299089e4c62c1042ce93059664d455ed0bfdf29cb959a861bda4b","v2:4b3157c730e498cb1126359fa020017e9e7c97b148f2d55da822fdfcd83e4a19"]},"transaction_id":"00000000-0000-0000-0000-000000000000","metadata":{"username":"auctane-next-day","password":"password!","meter_number":"8675309"}}
            }
          }
        },
        "responses": {
          "200": {
            "description": "An object with a list of information contained in the inbound data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateInboundDataResponse"
                },
                "examples": {
                  "Tracking": {
                    "summary": "Tracking",
                    "value": {"content_types":["tracking"]}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/NormalizeTrackingData": {
      "post": {
        "tags": [
          "Normalize Inbound Data"
        ],
        "description": "This method returns normalized tracking information for one or more shipments based on data send by the carrier\r\n            \r\nCarriers which support webhook based tracking updates may choose to implement this endpoint\r\n            \r\nNote: Changes made to the connection meta-data will not be saved if modified",
        "operationId": "NormalizeTrackingData",
        "requestBody": {
          "description": "An object containing tracking information sent by the carrier via an inbound data request (e.g. a webhook).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NormalizeTrackingDataRequest"
              },
              "example": {"data":"{\"tracking_number\":\"12345678901234567890\",\"status\":11,\"timestamp\":\"2021-08-11T21:15:00Z\"}","headers":{"content-type":["application/json"],"X-Signature":["v1:cedff7d0389299089e4c62c1042ce93059664d455ed0bfdf29cb959a861bda4b","v2:4b3157c730e498cb1126359fa020017e9e7c97b148f2d55da822fdfcd83e4a19"]},"transaction_id":"00000000-0000-0000-0000-000000000000","metadata":{"username":"auctane-next-day","password":"password!","meter_number":"8675309"}}
            }
          }
        },
        "responses": {
          "200": {
            "description": "An object with tracking information for one or more shipments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NormalizeTrackingDataResponse"
                },
                "examples": {
                  "Delivered": {
                    "summary": "Delivered",
                    "value": {"tracking_info":[{"carrier_name":"UPS","tracking_number":"12345678901234567890","standardized_status_code":"DE","carrier_status_code":"11","carrier_status_description":"Delivered","estimated_delivery_datetime":"2021-08-11T00:00:00","actual_delivery_datetime":"2021-08-11T21:15:00Z","service":{"code":"03","name":"UPS® Ground"},"packaging":"package","package_count":1,"shipping_problem":false,"carrierEnum":0}],"update_method":"append"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CreateNotification": {
      "post": {
        "tags": [
          "Shipment Notifications"
        ],
        "operationId": "CreateNotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This object model represents the response from a successful create notification request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNotificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/CancelNotification": {
      "post": {
        "tags": [
          "Shipment Notifications"
        ],
        "operationId": "CancelNotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelNotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This object model represents the response from a successful cancel notification request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelNotificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/SchedulePickup": {
      "post": {
        "tags": [
          "Scheduled Pickups"
        ],
        "description": "This method is used to schedule a pickup with a carrier.",
        "operationId": "SchedulePickup",
        "requestBody": {
          "description": "An object containing information about the pickup being scheduled.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePickupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This object model represents the response from a successful schedule pickup request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePickupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/CancelPickup": {
      "post": {
        "tags": [
          "Scheduled Pickups"
        ],
        "operationId": "CancelPickup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPickupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This object model represents the response from a successful cancel pickup request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPickupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/GetRates": {
      "post": {
        "tags": [
          "Rating"
        ],
        "description": "This method calculates the shipping costs for a shipment, or multiple permutations of a shipment, to allow\r\nyour customers to select the best rate.\r\n            \r\nMost carrier apps should implement this method, unless you don't support rating shipments.",
        "operationId": "GetRates",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetRatesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This object model represents the response from a successful get rates request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRatesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/GetRelayPoints": {
      "post": {
        "tags": [
          "Relay Points"
        ],
        "description": "This method gets carrier relay points based on search criteria.",
        "operationId": "GetRelayPoints",
        "parameters": [
          {
            "name": "transactionId",
            "in": "query",
            "description": "The transaction ID uniquely represents this request.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing search criteria for relay points.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetRelayPointsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This object model represents the response from a successful get relay points request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRelayPointsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/GetServicePoints": {
      "post": {
        "tags": [
          "Service Points"
        ],
        "description": "This method gets carrier service points based on search criteria.",
        "operationId": "Get Service Points",
        "parameters": [
          {
            "name": "ShipStation-TransactionID",
            "in": "header",
            "description": "The transaction ID uniquely represents this request.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing search criteria for service points.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetServicePointsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This object model represents the response from a successful get service points response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetServicePointsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/GetServicePoint": {
      "post": {
        "tags": [
          "Service Points"
        ],
        "description": "This method gets a carrier service point by id",
        "operationId": "Get Service Point",
        "parameters": [
          {
            "name": "ShipStation-TransactionID",
            "in": "header",
            "description": "The transaction ID uniquely represents this request.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing search criteria for service points.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetServicePointRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This object model represents the response from a successful get service point response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetServicePointResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Track": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "description": "This method returns tracking information for a shipment, including each of the tracking events that\r\nhave occurred for the shipment.\r\n            \r\nMost carrier applications should implement this method, unless you don't support tracking shipments.",
        "operationId": "Track",
        "requestBody": {
          "description": "An object containing information about the label to track.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackingRequest"
              },
              "example": {"tracking_number":"12345678901234567890","is_return":false,"identifiers":[{"type":"tracking_number","value":"12345678901234567890"},{"type":"carrier_transaction_id","value":"US-12345678901234567890-1"}],"attributes":[{"type":"marketplace_order_token","value":"123456abcdefg7890"}],"transaction_id":"00000000-0000-0000-0000-000000000000","metadata":{"username":"auctane-next-day","password":"password!","meter_number":"8675309"}}
            }
          }
        },
        "responses": {
          "200": {
            "description": "An object with tracking information for the specified shipment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingResponse"
                },
                "examples": {
                  "Delivered with Event History": {
                    "summary": "Delivered with Event History",
                    "value": {"tracking_info":{"carrier_name":"UPS","tracking_number":"12345678901234567890","standardized_status_code":"DE","carrier_status_code":"11","carrier_status_description":"Delivered","estimated_delivery_datetime":"2021-08-11T00:00:00","actual_delivery_datetime":"2021-08-11T21:15:00Z","weight":500.0,"dimensions":{"length":10.0,"width":10.0,"height":10.0},"service":{"code":"03","name":"UPS® Ground"},"packaging":"package","package_count":1,"events":[{"event_datetime":"2021-08-08T21:15:00Z","event_datetime_local":"2021-08-08T16:15:00","event_code":"3","description":"Order Processed: Ready for UPS","city":"Austin","state":"TX","postal_code":"78756","country":"US","geo":{"lat":30.31,"long":-97.74},"status_code":"AC"},{"event_datetime":"2021-08-09T09:15:00Z","event_datetime_local":"2021-08-09T04:15:00","event_code":"5","description":"In Transit","city":"Austin","state":"TX","postal_code":"78756","country":"US","geo":{"lat":30.2,"long":-97.66},"status_code":"IT"},{"event_datetime":"2021-08-10T09:15:00Z","event_datetime_local":"2021-08-10T04:15:00","event_code":"6","description":"On Vehicle for Delivery","city":"Los Angeles","state":"CA","postal_code":"90045","country":"US","geo":{"lat":33.95,"long":-118.38},"status_code":"IT"},{"event_datetime":"2021-08-10T15:15:00Z","event_datetime_local":"2021-08-10T10:15:00","event_code":"21","description":"On Vehicle for Delivery Today","city":"Los Angeles","state":"CA","postal_code":"90045","country":"US","geo":{"lat":33.95,"long":-118.38},"status_code":"IT"},{"event_datetime":"2021-08-10T21:15:00Z","event_datetime_local":"2021-08-10T16:15:00","event_code":"22","description":"First Attempt Made","city":"El Segundo","state":"CA","postal_code":"90245","country":"US","geo":{"lat":33.95,"long":-118.38},"status_code":"AT"},{"event_datetime":"2021-08-11T03:15:00Z","event_datetime_local":"2021-08-10T22:15:00","event_code":"21","description":"On Vehicle for Delivery Today","city":"Los Angeles","state":"CA","postal_code":"90045","country":"US","geo":{"lat":33.95,"long":-118.38},"status_code":"IT"},{"event_datetime":"2021-08-11T21:15:00Z","event_datetime_local":"2021-08-11T16:15:00","event_code":"11","description":"Delivered","city":"El Segundo","state":"CA","postal_code":"90245","country":"US","geo":{"lat":33.95,"long":-118.38},"status_code":"DE"}],"shipping_problem":false,"carrierEnum":0}}
                  },
                  "Not Yet in System": {
                    "summary": "Not Yet in System",
                    "value": {"tracking_info":{"carrier_name":"UPS","tracking_number":"12345678901234567890","standardized_status_code":"NY","events":[],"shipping_problem":false,"carrierEnum":0}}
                  },
                  "Fatal Exception": {
                    "summary": "Fatal Exception",
                    "value": {"tracking_info":{"carrier_name":"UPS","tracking_number":"12345678901234567890","standardized_status_code":"EX","carrier_status_code":"64","carrier_status_description":"Delivery Refused","estimated_delivery_datetime":"2021-08-11T00:00:00","actual_delivery_datetime":"2021-08-11T21:15:00Z","weight":500.0,"dimensions":{"length":10.0,"width":10.0,"height":10.0},"service":{"code":"03","name":"UPS® Ground"},"packaging":"package","package_count":1,"events":[{"event_datetime":"2021-08-09T09:15:00Z","event_datetime_local":"2021-08-09T04:15:00","event_code":"5","description":"In Transit","city":"Austin","state":"TX","postal_code":"78756","country":"US","geo":{"lat":30.2,"long":-97.66},"status_code":"IT"},{"event_datetime":"2021-08-11T21:15:00Z","event_datetime_local":"2021-08-11T16:15:00","event_code":"59","description":"Delivery Refused","city":"El Segundo","state":"CA","postal_code":"90245","country":"US","geo":{"lat":33.95,"long":-118.38},"status_code":"EX"}],"shipping_problem":false,"carrierEnum":0}}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ImportTrackingEvents": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "description": "This method should yield imported tracking events for a connection. It should\r\nonly be implemented if you support importing tracking data in bulk via file\r\nexchange or API requests.\r\nAny information needed to retrieve tracking data for a connection should be\r\ncollected in your registration form and will be made available as metadata in\r\nthe request.\r\nSee the [Tracking Overview](https://connect.shipengine.com/shipping/tracking/)\r\nfor implementation details.",
        "operationId": "ImportTrackingEvents",
        "requestBody": {
          "description": "An object containing information about the connection to import tracking events for.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportTrackingEventsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of imported tracking events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImportedTrackingEvent"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/UpdateSettings": {
      "post": {
        "tags": [
          "Account Setup"
        ],
        "description": "This method is used to update carrier settings.",
        "operationId": "Update Settings",
        "requestBody": {
          "description": "An object containing the settings information that you wish to be updated for a given carrier.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Update Settings method updates carrier settings that were set up during the registration of a given carrier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSettingsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ValidateShipment": {
      "post": {
        "tags": [
          "Validations"
        ],
        "description": "This method validates a shipment against carrier constraints for selected service.",
        "operationId": "ValidateShipment",
        "requestBody": {
          "description": "An object containing information about the shipment and selected services to validate.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateShipmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This object model represents the response from a successful validate shipment request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateShipmentResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddressBase": {
        "required": [
          "postal_code",
          "country_code"
        ],
        "type": "object",
        "properties": {
          "address_lines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The address lines of the address.",
            "nullable": true
          },
          "city_locality": {
            "type": "string",
            "description": "The city or locality of the address, where applicable.",
            "nullable": true
          },
          "state_province": {
            "type": "string",
            "description": "The state or province of the address, where applicable.",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "description": "The postal code of the address.",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "description": "The two character country code of the shipment address. The codes are specified by ISO 3166-1 alpha-2.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressResidentialIndicator": {
        "enum": [
          "unknown",
          "yes",
          "no",
          "commercial",
          "residential"
        ],
        "type": "string",
        "description": "'Commercial' is no longer used, please use 'No'. <br />'Residential' is no longer used, please use 'Yes'."
      },
      "AddressWithContact": {
        "required": [
          "postal_code",
          "country_code"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AddressBase"
          }
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The full name of the contact associated with the address",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the contact associated with the address",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the contact associated with the address",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email of the contact associated with the address",
            "nullable": true
          },
          "phone_number": {
            "type": "string",
            "description": "The phone number of the contact associated with the address",
            "nullable": true
          },
          "company_name": {
            "type": "string",
            "description": "The name of the company associated with this address.",
            "nullable": true
          },
          "address_residential_indicator": {
            "$ref": "#/components/schemas/AddressResidentialIndicator"
          },
          "instructions": {
            "type": "string",
            "description": "Instructions to help the carrier navigate to the address.",
            "nullable": true
          },
          "address_metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Additional metadata provided for specific requests.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdvancedOptions": {
        "type": "object",
        "properties": {
          "contains_alcohol": {
            "type": "boolean",
            "description": "Describes whether or not the shipment contains alcohol."
          },
          "no_postage": {
            "type": "boolean",
            "description": "Describes whether no postage is necessary"
          },
          "nonmachineable": {
            "type": "boolean",
            "description": "Describes whether or not the shipment is non automatically sortable with machines."
          },
          "saturday_delivery": {
            "type": "boolean",
            "description": "Describes whether or not the shipment is requested to be delivered on a Saturday."
          },
          "tip": {
            "required": [
              "currency",
              "amount"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Decimal currency value, as a string."
              },
              "currency": {
                "type": "string",
                "description": "Alpha-3 currency code complying with ISO 4217."
              }
            },
            "description": "Amount to be paid to the driver, used for local delivery and courier services.",
            "nullable": true
          },
          "additional_handling": {
            "type": "boolean",
            "description": "Describes whether Additional Handling is requested for the shipment."
          },
          "collect_on_delivery": {
            "$ref": "#/components/schemas/CollectOnDelivery"
          },
          "own_document_upload": {
            "type": "boolean",
            "description": "Whether client is requesting the ability to upload documents like commercial invoice after the shipment has been processed."
          },
          "dangerous_goods": {
            "type": "boolean",
            "description": "Indicates if the Dangerous goods are present in the shipment."
          },
          "dangerous_goods_contact": {
            "$ref": "#/components/schemas/DangerousGoodsContact"
          },
          "limited_quantity": {
            "type": "boolean",
            "description": "Describes the transport of dangerous goods that is restricted to Limited Quantities of Dangerous Goods only."
          },
          "event_notification": {
            "type": "boolean",
            "description": "Indicates whether the recipient should be notified of events related to the shipment."
          }
        },
        "additionalProperties": { },
        "description": "This is a schemaless object. It is for open ended customizations unique to particular carriers. The documented\r\nkeys are some common options shared by many carriers, but are not definitive. Advanced options you support will\r\nbe defined in ShipEngine. If the field is absent it should be interpreted as the default value for any\r\napplicable options, e.g. false for booleans."
      },
      "Authorization": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "The access token used to authorize the request",
            "nullable": true
          },
          "connection_context": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Optional - any additional information required to authorize the request",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaseRequest": {
        "required": [
          "transaction_id"
        ],
        "type": "object",
        "properties": {
          "transaction_id": {
            "type": "string",
            "description": "The transaction ID uniquely represents this request. If the request is retried then this transaction ID will be the same. You should only perform the requested action once per given transaction ID.",
            "format": "uuid"
          },
          "authorization": {
            "$ref": "#/components/schemas/Authorization"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            },
            "nullable": true
          },
          "connection_name": {
            "type": "string",
            "description": "The name of the connection to use, if this app has connection names defined",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaseResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            },
            "description": "This is an optional schemaless object that you may return with a successful response. Anything returned\r\nunder this key will be included in all future requests. For example, you may store additional static\r\nproperties about the end user or their connection to the carrier. The maximum storage size\r\nfor data under this key is 4KB.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillTo": {
        "required": [
          "postal_code",
          "country_code"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AddressWithContact"
          }
        ],
        "properties": {
          "bill_to_party": {
            "$ref": "#/components/schemas/BillToParty"
          },
          "account_number": {
            "type": "string",
            "description": "Specified if there is an account number associated with the Bill To Party, and the Bill To Party is\r\nnot the account holder.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Bill to is a generic object used for billing a part of the shipment, duties, taxes, or otherwise to a party\r\nother than the shipper (the shipper is considered the default party responsible).  CarrierApi.Common.Request.CarrierApi.Common.Models.BillTo\r\nextends CarrierApi.Common.Models.Addresses.AddressWithContact since address fields are often required when associating billing to\r\nanother account.  Additionally, this allows for a contact to be specified, if necessary."
      },
      "BillToParty": {
        "enum": [
          "shipper",
          "recipient",
          "third_party_account"
        ],
        "type": "string",
        "description": "The type of party responsible for a given category of charges associated with a shipment, such as shipping charges or import duties."
      },
      "BillingCategories": {
        "enum": [
          "uncategorized",
          "shipping",
          "insurance",
          "confirm",
          "discount",
          "fuel_charge",
          "additional_fees",
          "tariff",
          "tax",
          "delivery",
          "handling",
          "special_goods",
          "pickup",
          "location_fee",
          "oversize",
          "returns",
          "notifications",
          "tip",
          "duties_and_taxes",
          "brokerage_fee"
        ],
        "type": "string"
      },
      "BillingLineItem": {
        "required": [
          "billing_category",
          "amount"
        ],
        "type": "object",
        "properties": {
          "billing_category": {
            "$ref": "#/components/schemas/BillingCategories"
          },
          "carrier_description": {
            "type": "string",
            "description": "If the carrier provides a description from their API about the billing charge (not specific to the user). Maximum length of 100 characters.",
            "nullable": true
          },
          "carrier_billing_code": {
            "type": "string",
            "description": "If the carrier provides a billing code for",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "description": "Maximum length of 250 characters. This will often be empty; however, if there was additionally specific information about the charge it should go here, could also be a reference number. Maximum length of 250 characters.",
            "nullable": true
          },
          "amount": {
            "required": [
              "currency",
              "amount"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Decimal currency value, as a string."
              },
              "currency": {
                "type": "string",
                "description": "Alpha-3 currency code complying with ISO 4217."
              }
            },
            "description": "Total amount of the line item to be billed to the end customer.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CancelNotificationRequest": {
        "required": [
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "notification_id": {
            "type": "string",
            "description": "The id of the notification.",
            "nullable": true
          },
          "shipment_information": {
            "$ref": "#/components/schemas/ShippedShipment"
          }
        },
        "additionalProperties": false,
        "description": "A request to cancel the pending notification of a shipment."
      },
      "CancelNotificationResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "User facing text describing the cancellation process. May be left \r\nblank to present a default value.",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of errors preventing this notification from being cancelled.\r\nIf no errors are returned the void is considered successful. If \r\nany errors are returned the void is considered failed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The response to the cancellation of a pending shipment notification."
      },
      "CancelPickupRequest": {
        "required": [
          "pickup_windows",
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "confirmation": {
            "$ref": "#/components/schemas/PickupConfirmation"
          },
          "location": {
            "$ref": "#/components/schemas/PickupLocationDetails"
          },
          "cancellation_details": {
            "$ref": "#/components/schemas/CancellationDetails"
          },
          "contact": {
            "$ref": "#/components/schemas/PickupContactDetails"
          },
          "pickup_details": {
            "$ref": "#/components/schemas/PickupShipmentDetails"
          },
          "pickup_windows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PickupWindow"
            },
            "description": "The time windows that the carrier returned in the Schedule Pickup Response",
            "nullable": true
          },
          "custom_properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "The grab bag of properties necessary to cancel the pickup",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A request to cancel a previously scheduled pickup"
      },
      "CancelPickupResponse": {
        "required": [
          "successful"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ],
        "properties": {
          "confirmation_id": {
            "type": "string",
            "description": "The confirmation id from the carrier associated with the cancellation request",
            "nullable": true
          },
          "successful": {
            "type": "boolean",
            "description": "A flag for whether or not the cancellation was successful"
          },
          "status": {
            "type": "string",
            "description": "The optional status returned by the carrier",
            "nullable": true,
            "example": "Your pickup was cancelled. Unable to cancel over the network, please call ### ### ####."
          },
          "custom_properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "A grab bag used to store additional information that might be useful for logging or internal reporting.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents a response for a successful cancel pickup request."
      },
      "CancellationDetails": {
        "required": [
          "reason"
        ],
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/CancellationReason"
          },
          "cancellation_options": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Additional properties about the cancellation",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "description": "Remarks about why the customer is cancelling the pickup",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model contains the explanation of why a user is cancelling a pickup."
      },
      "CancellationReason": {
        "enum": [
          "other",
          "not_ready",
          "cost_too_high",
          "service_too_slow",
          "carrier_failed_pickup"
        ],
        "type": "string",
        "description": "An enumeration of common reasons cancellations occur"
      },
      "CodPaymentType": {
        "enum": [
          "any",
          "cash",
          "guaranteed_funds"
        ],
        "type": "string",
        "description": "Specifies which payment method is permitted when Collect on Delivery (COD) is requested on a shipment.\r\nany - Any payment method is permitted.\r\ncash - Only cash is permitted.\r\nguaranteed_funds - Only guaranteed funds are permitted, such as a money order or cashier's check."
      },
      "CollectOnDelivery": {
        "required": [
          "payment_amount"
        ],
        "type": "object",
        "properties": {
          "payment_amount": {
            "required": [
              "currency",
              "amount"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Decimal currency value, as a string."
              },
              "currency": {
                "type": "string",
                "description": "Alpha-3 currency code complying with ISO 4217."
              }
            },
            "description": "The payment amount for Collect on Delivery (COD).",
            "nullable": true
          },
          "payment_type": {
            "$ref": "#/components/schemas/CodPaymentType"
          }
        },
        "additionalProperties": false,
        "description": "This model represents the option to defer payment for a shipment, otherwise known as Collect on Delivery (COD)."
      },
      "ConfirmationTypes": {
        "enum": [
          "None",
          "Delivery",
          "Signature",
          "AdultSignature",
          "DirectSignature"
        ],
        "type": "string"
      },
      "CreateLabelRequest": {
        "required": [
          "service_code",
          "ship_datetime",
          "is_return_label",
          "is_residential",
          "packages",
          "ship_to",
          "ship_from",
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "service_code": {
            "type": "string",
            "description": "The service code uniquely identifies a shipping service that you offer. Which service codes can be passed\r\nto you will be configured in ShipEngine.",
            "nullable": true
          },
          "ship_datetime": {
            "type": "string",
            "description": "When the package is expected to ship. Not guaranteed to be in the future. Formatted per the\r\nhttps://tools.ietf.org/html/rfc3339 spec. Will always be in UTC.",
            "format": "date-time"
          },
          "confirmation": {
            "$ref": "#/components/schemas/ConfirmationTypes"
          },
          "label_format": {
            "$ref": "#/components/schemas/DocumentFormat"
          },
          "label_layout": {
            "$ref": "#/components/schemas/LabelLayouts"
          },
          "is_test_label": {
            "type": "boolean",
            "description": "Whether this request is the result of a test. When true the request must not result in any financial charges\r\nto any party. If the field is absent it should be interpreted as false"
          },
          "advanced_options": {
            "$ref": "#/components/schemas/AdvancedOptions"
          },
          "insurance_provider": {
            "$ref": "#/components/schemas/InsuranceProviders"
          },
          "is_return_label": {
            "type": "boolean",
            "description": "Whether this label is to return a previously shipped package. If the field is absent it should be\r\ninterpreted as false."
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Package"
            },
            "description": "All the packages that make up this shipment. There will always be at least one package defined.",
            "nullable": true
          },
          "customs": {
            "$ref": "#/components/schemas/Customs"
          },
          "ship_to": {
            "$ref": "#/components/schemas/ShipTo"
          },
          "ship_from": {
            "$ref": "#/components/schemas/ShipFrom"
          },
          "pickup_location": {
            "$ref": "#/components/schemas/PudoLocation"
          },
          "relay_points": {
            "$ref": "#/components/schemas/RelayPointDetails"
          },
          "ship_from_display": {
            "$ref": "#/components/schemas/ShipFromDisplay"
          },
          "next_day": {
            "type": "boolean",
            "description": "Whether this shipment is expected to use a next day service class. If the field is absent it\r\nshould be interpreted as false",
            "nullable": true
          },
          "international": {
            "type": "boolean",
            "description": "Whether this shipment is deemed international.",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "description": "A user specified free form string to identify this shipment in their own system.",
            "nullable": true
          },
          "return_details": {
            "$ref": "#/components/schemas/ReturnLabelDetails"
          },
          "fulfillment_plan_details": {
            "$ref": "#/components/schemas/FulfillmentPlanDetails"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "description": "Attachments that may be required to be sent to the carrier, in particular customs documents or\r\ncommercial invoices.",
            "nullable": true
          },
          "bill_shipping_to": {
            "$ref": "#/components/schemas/BillTo"
          },
          "carrier_pickup_window": {
            "$ref": "#/components/schemas/TimeWindow"
          },
          "carrier_rate_id": {
            "type": "string",
            "description": "Unique identifier for the carrier rate",
            "nullable": true
          },
          "display_schemes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisplayScheme"
            },
            "description": "Display schemes that the label will be returned in. Label is returned by default",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateLabelResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ],
        "properties": {
          "transaction_id": {
            "type": "string",
            "description": "The transaction ID uniquely represents this request.",
            "format": "uuid"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "description": "Shipment level documents should be used if documents are not returned at a package level.\r\nDO NOT include duplicate documents intentionally, a document should only be added to the CreateLabelResponse\r\nor to the LabelPackage.",
            "nullable": true
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelPackage"
            },
            "description": "Package information returned for each requested package in the shipment.\r\nNote: The order of the packages returned should match the order of the packages in the request.",
            "nullable": true
          },
          "billing_line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingLineItem"
            },
            "description": "Individual Billing Line items for the label.",
            "nullable": true
          },
          "tracking_number": {
            "type": "string",
            "description": "The carrier specific tracking identifier for this shipment; if a multi-package shipment, this should be\r\nthe lead tracking number.",
            "nullable": true
          },
          "tracking_url": {
            "type": "string",
            "description": "The carrier specific tracking URL for this shipment; if a multi-package shipment, this should be\r\nthe lead tracking number.",
            "nullable": true
          },
          "trackable": {
            "type": "boolean",
            "description": "Whether this shipment can be tracked.",
            "nullable": true
          },
          "alternative_identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "description": "Alternative identifiers associated with this shipment.",
            "nullable": true
          },
          "estimated_delivery_datetime": {
            "type": "string",
            "description": "The estimated date and time for when the shipment will be delivered. Formatted per the\r\nhttps://tools.ietf.org/html/rfc3339 spec.",
            "format": "date-time",
            "nullable": true,
            "example": "1937-01-01T12:00:27.87+00:20"
          },
          "consolidator_service_code": {
            "type": "string",
            "description": "For consolidated shipping services, this should map to the service code of the actual carrier used.",
            "nullable": true
          },
          "carrier_pickup_window": {
            "$ref": "#/components/schemas/TimeWindow"
          },
          "delivery_window": {
            "$ref": "#/components/schemas/TimeWindow"
          },
          "relay_points": {
            "$ref": "#/components/schemas/RelayPointDetails"
          },
          "paperless_details": {
            "$ref": "#/components/schemas/PaperlessDetails"
          }
        },
        "additionalProperties": false,
        "description": "This model represents the response from a successful create label request."
      },
      "CreateManifestRequest": {
        "required": [
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "ship_from": {
            "$ref": "#/components/schemas/ShipFrom"
          },
          "included_labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManifestRequestShipment"
            },
            "description": "The shipments to include in the manifest. There should be at least one shipment included in a manifest.",
            "nullable": true
          },
          "excluded_labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManifestRequestShipment"
            },
            "description": "The shipments to exclude from the manifest.",
            "nullable": true
          },
          "open_datetime": {
            "type": "string",
            "description": "The date and time of the earliest shipment being manifested. Formatted per the\r\nhttps://tools.ietf.org/html/rfc3339 spec",
            "format": "date-time",
            "nullable": true
          },
          "close_datetime": {
            "type": "string",
            "description": "The date and time of the last shipment being manifested. Formatted per the\r\nhttps://tools.ietf.org/html/rfc3339 spec",
            "format": "date-time"
          },
          "advanced_options": {
            "$ref": "#/components/schemas/AdvancedOptions"
          }
        },
        "additionalProperties": false,
        "description": "This model represents the request payload needed to manifest with a shipping provider."
      },
      "CreateManifestResponse": {
        "required": [
          "manifests"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ],
        "properties": {
          "transaction_id": {
            "type": "string",
            "format": "uuid"
          },
          "manifests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Manifest"
            },
            "description": "The manifests created from this request. It should contain either a href or data, but not both.",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManifestError"
            },
            "description": "Errored shipments if some but not all shipments were successfully manifested",
            "nullable": true
          },
          "manifest_status": {
            "$ref": "#/components/schemas/ManifestStatus"
          },
          "manifest_request_id": {
            "type": "integer",
            "description": "Manifest request identifier.",
            "format": "int64",
            "nullable": true
          },
          "total_shipments": {
            "type": "integer",
            "description": "Total number of shipments requested for manifesting.",
            "format": "int32",
            "nullable": true
          },
          "total_invalid": {
            "type": "integer",
            "description": "Total number of shipments that failed to manifest.",
            "format": "int32",
            "nullable": true
          },
          "manifest_identifiers": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            },
            "description": "Carrier information needed to get created manifests.\r\nOnly needed if carrier requires two calls to create and get manifests.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the successful response for a create manifest request."
      },
      "CreateNotificationRequest": {
        "required": [
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "shipment_information": {
            "$ref": "#/components/schemas/ShippedShipment"
          },
          "create_label_request": {
            "$ref": "#/components/schemas/CreateLabelRequest"
          },
          "advanced_options": {
            "$ref": "#/components/schemas/AdvancedOptions"
          }
        },
        "additionalProperties": false,
        "description": "A request to notify a third party of a shipment."
      },
      "CreateNotificationResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ],
        "properties": {
          "notification_id": {
            "type": "string",
            "description": "The id of the successfully created notification.",
            "nullable": true
          },
          "billing_line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingLineItem"
            },
            "description": "Individual Billing Line items for the label.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The response to a notification request."
      },
      "Credentials": {
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The credentials that will be used to access this carrier's services. These will be sent as a\r\nBasic Authorization header with all future requests."
      },
      "CustomCharges": {
        "type": "object",
        "properties": {
          "freight_charge": {
            "required": [
              "currency",
              "amount"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Decimal currency value, as a string."
              },
              "currency": {
                "type": "string",
                "description": "Alpha-3 currency code complying with ISO 4217."
              }
            },
            "description": "Freight Charge for international shipments.",
            "nullable": true
          },
          "other_charge": {
            "required": [
              "currency",
              "amount"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Decimal currency value, as a string."
              },
              "currency": {
                "type": "string",
                "description": "Alpha-3 currency code complying with ISO 4217."
              }
            },
            "description": "Other Charge for international shipments.",
            "nullable": true
          },
          "other_charge_description": {
            "type": "string",
            "description": "Description for other_charge",
            "nullable": true
          },
          "insurance_charge": {
            "required": [
              "currency",
              "amount"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Decimal currency value, as a string."
              },
              "currency": {
                "type": "string",
                "description": "Alpha-3 currency code complying with ISO 4217."
              }
            },
            "description": "Insurance Charge for international shipments.",
            "nullable": true
          },
          "discount": {
            "required": [
              "currency",
              "amount"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Decimal currency value, as a string."
              },
              "currency": {
                "type": "string",
                "description": "Alpha-3 currency code complying with ISO 4217."
              }
            },
            "description": "Discount for international shipments.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the charges related with customs."
      },
      "Customs": {
        "required": [
          "customs_items"
        ],
        "type": "object",
        "properties": {
          "contents": {
            "$ref": "#/components/schemas/CustomsContentTypes"
          },
          "non_delivery": {
            "$ref": "#/components/schemas/CustomsNonDelivery"
          },
          "customs_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomsItem"
            },
            "description": "List of customs items to declare",
            "nullable": true
          },
          "buyer_shipping_amount_paid": {
            "required": [
              "currency",
              "amount"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Decimal currency value, as a string."
              },
              "currency": {
                "type": "string",
                "description": "Alpha-3 currency code complying with ISO 4217."
              }
            },
            "description": "Indicates how much the buyer paid for shipping, if any. This amount may be different than the shipping cost billed\r\nto the shipper.",
            "nullable": true
          },
          "duties_paid": {
            "required": [
              "currency",
              "amount"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Decimal currency value, as a string."
              },
              "currency": {
                "type": "string",
                "description": "Alpha-3 currency code complying with ISO 4217."
              }
            },
            "description": "The amount of duties paid by the shipper, if any. This is generally only necessary for DDP\r\n(bill_duties_to_sender) shipments.",
            "nullable": true
          },
          "bill_duties_to": {
            "$ref": "#/components/schemas/BillTo"
          },
          "declaration": {
            "type": "string",
            "description": "Declaration statement to be placed on the commercial invoice",
            "nullable": true
          },
          "terms_of_trade_code": {
            "$ref": "#/components/schemas/TermsOfTradeCode"
          },
          "importer_of_record": {
            "$ref": "#/components/schemas/ImporterOfRecord"
          },
          "invoice_additional_details": {
            "$ref": "#/components/schemas/CustomCharges"
          },
          "contents_explanation": {
            "type": "string",
            "description": "Text explanation for the content",
            "nullable": true
          },
          "export_declaration_number": {
            "type": "string",
            "description": "An EDN is a number which is nine alphanumeric characters long and issued by the Australian Customs (Australian Border Force) in exchange for the information that an exporter shares with them.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomsContentTypes": {
        "enum": [
          "merchandise",
          "documents",
          "gift",
          "sample",
          "returned_goods",
          "other"
        ],
        "type": "string"
      },
      "CustomsItem": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A user specified free form string describing this customs item. If the field is absent the user has\r\nnot specified a description.",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "The user specified count of items in this declaration. This value should be 1 or greater",
            "format": "int32"
          },
          "value": {
            "required": [
              "currency",
              "amount"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Decimal currency value, as a string."
              },
              "currency": {
                "type": "string",
                "description": "Alpha-3 currency code complying with ISO 4217."
              }
            },
            "description": "The user specified declared customs value of this customs item. Generally, this value needs to be greater\r\nthan 0 to be accepted through customs.",
            "nullable": true
          },
          "country_of_origin": {
            "type": "string",
            "description": "The user specified declared country of origin of this customs item.",
            "nullable": true
          },
          "harmonized_tariff_code": {
            "type": "string",
            "description": "The user specified Harmonized Tariff Code. See https://hts.usitc.gov/ for more information.",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "description": "The user specified SKU of this customs item. This field is completely free form.",
            "nullable": true
          },
          "sku_description": {
            "type": "string",
            "description": "The user specified SKU description of this customs item. This field is completely free form.",
            "nullable": true
          },
          "item_weight": {
            "$ref": "#/components/schemas/WeightDetails"
          },
          "product_url": {
            "type": "string",
            "description": "A link to the item being shipped on the seller's website, used by customs officials\r\nto visually compare the item in the package to the available photo on the website.",
            "nullable": true
          },
          "vat_rate": {
            "type": "number",
            "description": "The VAT rate applicable to the item being shipped, expressed as a decimal value between 0 and 1.",
            "format": "double",
            "nullable": true
          },
          "mid_code": {
            "type": "string",
            "description": "The Manufacturer Identification Code (MID). It is ussed as an alternative to the full\r\nname and address of a manufacturer, shipper or exporter and is always required for\r\nU.S. formal customs entries.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the customs declaration for a single item."
      },
      "CustomsNonDelivery": {
        "enum": [
          "return_to_sender",
          "treat_as_abandoned"
        ],
        "type": "string",
        "description": "What to do if the shipment is undeliverable."
      },
      "DangerousAmountDetails": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The amount of dangerous goods.",
            "format": "double",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "description": "The unit of dangerous goods.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the amount of the dangerous goods."
      },
      "DangerousGoods": {
        "type": "object",
        "properties": {
          "id_number": {
            "type": "string",
            "description": "UN number to identify the dangerous goods.",
            "nullable": true
          },
          "shipping_name": {
            "type": "string",
            "description": "Trade description of the dangerous goods.",
            "nullable": true
          },
          "technical_name": {
            "type": "string",
            "description": "Recognized Technical or chemical name of dangerous goods.",
            "nullable": true
          },
          "product_class": {
            "type": "string",
            "description": "Dangerous goods product class based on regulation.",
            "nullable": true
          },
          "product_class_subsidiary": {
            "type": "string",
            "description": "A secondary of product class for substances presenting more than one particular hazard",
            "nullable": true
          },
          "packaging_group": {
            "$ref": "#/components/schemas/PackagingGroupEnum"
          },
          "dangerous_amount": {
            "$ref": "#/components/schemas/DangerousAmountDetails"
          },
          "quantity": {
            "type": "number",
            "description": "Quantity of dangerous goods.",
            "format": "double",
            "nullable": true
          },
          "packaging_instruction": {
            "type": "string",
            "description": "The specific standardized packaging instructions from the relevant regulatory agency that have been applied to the parcel/container.",
            "nullable": true
          },
          "packaging_instruction_section": {
            "$ref": "#/components/schemas/PackageInstructionSectionEnum"
          },
          "packaging_type": {
            "type": "string",
            "description": "The type of exterior packaging used to contain the dangerous good.",
            "nullable": true
          },
          "transport_mean": {
            "$ref": "#/components/schemas/TransportMeanEnum"
          },
          "transport_category": {
            "type": "string",
            "description": "Transport category assign to dangerous goods for the transport purpose.",
            "nullable": true
          },
          "regulation_authority": {
            "type": "string",
            "description": "Name of the regulatory authority.",
            "nullable": true
          },
          "regulation_level": {
            "$ref": "#/components/schemas/RegulationLevelEnum"
          },
          "radioactive": {
            "type": "boolean",
            "description": "Indication if the substance is radioactive.",
            "nullable": true
          },
          "reportable_quantity": {
            "type": "boolean",
            "description": "Indication if the substance needs to be reported to regulatory authority based on the quantity.",
            "nullable": true
          },
          "tunnel_code": {
            "type": "string",
            "description": "Defines which types of tunnels the shipment is allowed to go through",
            "nullable": true
          },
          "additional_description": {
            "type": "string",
            "description": "Provider additonal description regarding the dangerous goods. This is used as a placed holder to provider additional context and varies by carrier",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Dangerous Goods information passed to the carrier"
      },
      "DangerousGoodsContact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name associated with dangerous goods contact.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The phone number associated with dangerous goods contact.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents contact information regarding dangerous goods"
      },
      "DayOfOperation": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "description": "The start date expressed in ISO 8601 date only format",
            "nullable": true,
            "example": "2024-01-25"
          },
          "end": {
            "type": "string",
            "description": "The end date expressed in ISO 8601 date only format",
            "nullable": true,
            "example": "2024-01-27"
          }
        },
        "additionalProperties": false
      },
      "DimensionDetails": {
        "type": "object",
        "properties": {
          "dimensions_in_centimeters": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "dimensions_in_inches": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "source_dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "source_dimension_unit": {
            "$ref": "#/components/schemas/DimensionUnit"
          }
        },
        "additionalProperties": false,
        "description": "This model represents the dimensions for a package represented in its original unit, inches, and centimeters."
      },
      "DimensionUnit": {
        "enum": [
          "inches",
          "centimeters"
        ],
        "type": "string",
        "description": "This model represents the supported units for dimensions."
      },
      "Dimensions": {
        "type": "object",
        "properties": {
          "length": {
            "type": "number",
            "description": "The length of the package.",
            "format": "double",
            "nullable": true
          },
          "width": {
            "type": "number",
            "description": "The width of the package.",
            "format": "double",
            "nullable": true
          },
          "height": {
            "type": "number",
            "description": "The height of the package.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the measurements for dimensions."
      },
      "DisplayScheme": {
        "enum": [
          "label",
          "paperless_label"
        ],
        "type": "string"
      },
      "Document": {
        "required": [
          "type",
          "data",
          "format"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentType"
            },
            "description": "The document type(s) being returned. In most cases this is just a single document type; however, some\r\ncarriers return multiple document types in the same PDF or ZPL.",
            "nullable": true
          },
          "data": {
            "type": "string",
            "description": "Base64 encoded data for the document.",
            "nullable": true
          },
          "format": {
            "$ref": "#/components/schemas/DocumentFormat"
          }
        },
        "additionalProperties": false,
        "description": "Container for a document."
      },
      "DocumentFormat": {
        "enum": [
          "PDF",
          "ZPL",
          "PNG"
        ],
        "type": "string"
      },
      "DocumentType": {
        "enum": [
          "label",
          "customs_form",
          "commercial_invoice",
          "bill_of_lading",
          "paperless_label"
        ],
        "type": "string"
      },
      "ExampleRegisterRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "FormDownload": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceDownload"
          }
        ],
        "additionalProperties": false,
        "description": "This provides any additional forms that go with the label. For example, customs forms. Exactly one of the\r\nkeys should be populated. Set href is the forms should be downloaded separately. Set data if the\r\nforms are returned directly in the response."
      },
      "FulfillmentPlanDetails": {
        "type": "object",
        "properties": {
          "external_sales_order_identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "description": "A list of identifiers for the sales order.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FulfillmentPlanItems"
            },
            "description": "Information about the fulfillment plan item.",
            "nullable": true
          },
          "raw_external_source": {
            "$ref": "#/components/schemas/RawExternalSource"
          }
        },
        "additionalProperties": false,
        "description": "This model contains information about the fulfillment plan."
      },
      "FulfillmentPlanItems": {
        "type": "object",
        "properties": {
          "external_sales_order_identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "description": "A list of identifiers for the sales order.",
            "nullable": true
          },
          "external_product_identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "description": "A list of identifiers specific to the selling channel.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the item.",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "The number of items.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "This contains information about the fulfillment plan for a set of items."
      },
      "Geolocation": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/GeolocationType"
          },
          "value": {
            "type": "string",
            "description": "The geolocation value.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Geolocation additional information for an address."
      },
      "GeolocationType": {
        "enum": [
          "what3words"
        ],
        "type": "string",
        "description": "Specifies the supported geolocation types."
      },
      "GetManifestRequest": {
        "required": [
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "manifest_request_id": {
            "type": "integer",
            "description": "Manifest request identifier.",
            "format": "int64",
            "nullable": true
          },
          "return_immediately": {
            "type": "boolean",
            "description": "Return immediately after checking status.\r\nFull manifest creation can take up to 2 minutes.\r\nSet to false to allow additional checks before timeout."
          },
          "manifest_identifiers": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            },
            "description": "Carrier specific data needed to retrieve Manifest results",
            "nullable": true
          },
          "included_labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManifestRequestShipment"
            },
            "description": "The shipments to include in the manifest. There should be at least one shipment included in a manifest.",
            "nullable": true
          },
          "excluded_labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManifestRequestShipment"
            },
            "description": "The shipments to exclude from the manifest.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the request payload needed to get a manifest that has already been created."
      },
      "GetRatesRequest": {
        "required": [
          "ship_datetime",
          "is_return_label",
          "is_residential",
          "packages",
          "ship_to",
          "ship_from",
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "service_code": {
            "type": "string",
            "description": "If present, a specific service is being requested, and that is the only rate required to fulfill the request.\r\nThe service code uniquely identifies a shipping service that you offer.\r\nWhich service codes can be passed to you will be configured in ShipEngine.",
            "nullable": true
          },
          "ship_datetime": {
            "type": "string",
            "description": "When the package is expected to ship. Not guaranteed to be in the future. Formatted per the\r\nhttps://tools.ietf.org/html/rfc3339 spec. Will always be in UTC.",
            "format": "date-time"
          },
          "confirmation": {
            "$ref": "#/components/schemas/ConfirmationTypes"
          },
          "advanced_options": {
            "$ref": "#/components/schemas/AdvancedOptions"
          },
          "insurance_provider": {
            "$ref": "#/components/schemas/InsuranceProviders"
          },
          "is_return_label": {
            "type": "boolean",
            "description": "Whether this label is to return a previously shipped package. If the field is absent it should be\r\ninterpreted as false."
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Package"
            },
            "description": "All the packages that make up this shipment. There will always be at least one package defined.",
            "nullable": true
          },
          "customs": {
            "$ref": "#/components/schemas/Customs"
          },
          "ship_to": {
            "$ref": "#/components/schemas/ShipTo"
          },
          "ship_from": {
            "$ref": "#/components/schemas/ShipFrom"
          },
          "pickup_location": {
            "$ref": "#/components/schemas/PudoLocation"
          },
          "international": {
            "type": "boolean",
            "description": "Whether this shipment is deemed international.",
            "nullable": true
          },
          "next_day": {
            "type": "boolean",
            "description": "Whether this shipment is expected to use a next day service class. If the field is absent it\r\nshould be interpreted as false",
            "nullable": true
          },
          "fulfillment_plan_details": {
            "$ref": "#/components/schemas/FulfillmentPlanDetails"
          },
          "bill_shipping_to": {
            "$ref": "#/components/schemas/BillTo"
          },
          "carrier_pickup_window": {
            "$ref": "#/components/schemas/TimeWindow"
          }
        },
        "additionalProperties": false,
        "description": "This model represents the payload sent to get a rate for a shipment."
      },
      "GetRatesResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ],
        "properties": {
          "rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rate"
            },
            "description": "A list of rates for shipping services. If you use service codes there may be exactly one rate returned for\r\nthe requested service. If you use service codes there may be more than one rate to provide additional\r\noptions. If you don't use service codes there may be one or more rates. If you don't provide real time\r\nrates you should return a single hard coded zero value rate.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the response for a get rates request."
      },
      "GetRelayPointsRequest": {
        "required": [
          "service_code",
          "postal_code",
          "country_code",
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "service_code": {
            "type": "string",
            "description": "The service code uniquely identifies a shipping service that you offer. Which service codes can be passed\r\nto you will be configured in ShipEngine.",
            "nullable": true
          },
          "city_locality": {
            "type": "string",
            "description": "The city locality to use when searching for available relay points.",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "description": "The postal code to use when searching for available relay points.",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "description": "The two character country code to use when searching for available relay points. The codes are specified by ISO 3166-1 alpha-2.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the payload sent to get relay points based on the provided search criteria."
      },
      "GetRelayPointsResponse": {
        "required": [
          "relay_points"
        ],
        "type": "object",
        "properties": {
          "relay_points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelayPoint"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Basic structure for a response to get relay points"
      },
      "GetServicePointRequest": {
        "required": [
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "service_point_id": {
            "type": "string",
            "description": "The service point id to get",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "description": "The two character country code of the service point. The codes are specified by ISO 3166-1 alpha-2.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetServicePointResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ],
        "properties": {
          "service_point": {
            "$ref": "#/components/schemas/ServicePoint"
          }
        },
        "additionalProperties": false
      },
      "GetServicePointsRequest": {
        "required": [
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "service_code": {
            "type": "string",
            "description": "The service code uniquely identifies a shipping service",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/ServicePointAddress"
          },
          "search_radius": {
            "$ref": "#/components/schemas/SearchRadius"
          },
          "max_results": {
            "type": "integer",
            "description": "The maximum number of service points to return",
            "format": "int32",
            "nullable": true
          },
          "shipment": {
            "$ref": "#/components/schemas/ServicePointShipment"
          }
        },
        "additionalProperties": false
      },
      "GetServicePointsResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ],
        "properties": {
          "service_points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServicePoint"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HoursOfOperation": {
        "type": "object",
        "properties": {
          "open": {
            "type": "string",
            "description": "The open time expressed in ISO 8601 time only format",
            "nullable": true,
            "example": "09:00:00"
          },
          "close": {
            "type": "string",
            "description": "The close time expressed in ISO 8601 time only format",
            "nullable": true,
            "example": "17:00:00"
          }
        },
        "additionalProperties": false
      },
      "Identifier": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The key.",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "The value.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A key value pair, allowing custom properties to be stored."
      },
      "ImportTrackingEventsRequest": {
        "required": [
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "additionalProperties": false
      },
      "ImportedTrackingEvent": {
        "type": "object",
        "properties": {
          "tracking_info": {
            "$ref": "#/components/schemas/TrackingInfo"
          },
          "update_method": {
            "$ref": "#/components/schemas/UpdateMethods"
          },
          "error_messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Any error messages resulting from processing the tracking event",
            "nullable": true
          },
          "warning_messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Any warning messages resulting from processing the tracking event",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents an imported tracking event"
      },
      "ImporterOfRecord": {
        "type": "object",
        "properties": {
          "tax_identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxIdentifier"
            },
            "description": "Tax Ids associated with the party responsible for ensuring that imported goods comply with all customs and legal requirements of the country of import (importer of record)",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Indicates  Name of the owner or purchaser of the products being imported into a destination country",
            "nullable": true
          },
          "company_name": {
            "type": "string",
            "description": "Indicates Company Name of the owner or purchaser of the products being imported into a destination country",
            "nullable": true
          },
          "address_line1": {
            "type": "string",
            "description": "Indicates address line one of the owner or purchaser of the products being imported into a destination country",
            "nullable": true
          },
          "address_line2": {
            "type": "string",
            "description": "Indicates address line other of the owner or purchaser of the products being imported into a destination country",
            "nullable": true
          },
          "city_locality": {
            "type": "string",
            "description": "Indicates City  or Locality  of the owner or purchaser of the products being imported into a destination country",
            "nullable": true
          },
          "state_province": {
            "type": "string",
            "description": "Indicates statate or providence  of the owner or purchaser of the products being imported into a destination country",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "description": "Indicates postal code of the owner or purchaser of the products being imported into a destination country",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "description": "Indicates country code of the owner or purchaser of the products being imported into a destination country",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Indicates phone number  of the owner or purchaser of the products being imported into a destination country",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email associated with the party responsible for ensuring that imported goods comply with all customs and legal requirements of the country of import (importer of record)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Basic structure for a Importer Record"
      },
      "InboundDataContentTypes": {
        "enum": [
          "tracking"
        ],
        "type": "string"
      },
      "InsuranceProviders": {
        "enum": [
          "None",
          "ShipStation",
          "Carrier",
          "External",
          "XCover",
          "ParcelGuard"
        ],
        "type": "string"
      },
      "LabelDownload": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceDownload"
          }
        ],
        "additionalProperties": false,
        "description": "This object provides the requested label that was just created. Exactly one of the keys should be populated.\r\nSet href if the label should be downloaded separately. Set data if the label is returned directly in\r\nthe response."
      },
      "LabelLayouts": {
        "enum": [
          "4x6",
          "letter"
        ],
        "type": "string"
      },
      "LabelMessage": {
        "type": "object",
        "properties": {
          "reference1": {
            "type": "string",
            "nullable": true
          },
          "reference2": {
            "type": "string",
            "nullable": true
          },
          "reference3": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LabelPackage": {
        "type": "object",
        "properties": {
          "tracking_number": {
            "type": "string",
            "description": "Tracking number for the package.",
            "nullable": true
          },
          "tracking_url": {
            "type": "string",
            "description": "Tracking URL for the package.",
            "nullable": true
          },
          "alternative_identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "description": "Alternative identifiers associated with this package, not including the tracking number.",
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "description": "Documents associated with this package, if documents are not specified at a package level, use the\r\nDocuments array at the CarrierApi.Common.Response.CreateLabelResponse level.",
            "nullable": true
          },
          "paperless_details": {
            "$ref": "#/components/schemas/PaperlessDetails"
          }
        },
        "additionalProperties": false,
        "description": "Package information provided from the carrier"
      },
      "LatLong": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "description": "The latitude of the point. Represented as signed degrees. http://www.geomidpoint.com/latlon.html",
            "format": "double",
            "example": -31.9543
          },
          "long": {
            "type": "number",
            "description": "The longitude of the point. Represented as signed degrees http://www.geomidpoint.com/latlon.html",
            "format": "double",
            "example": -120.9762
          }
        },
        "additionalProperties": false,
        "description": "This model represents a geographic point."
      },
      "Manifest": {
        "type": "object",
        "properties": {
          "manifest_id": {
            "type": "string",
            "description": "The unique identifier for this manifest.",
            "nullable": true
          },
          "document_download": {
            "$ref": "#/components/schemas/ResourceDownload"
          },
          "manifest_request_shipment_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The manifest request shipment id's associated with this manifest document",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents a single manifest created with a shipping provider."
      },
      "ManifestCustoms": {
        "type": "object",
        "properties": {
          "contents": {
            "$ref": "#/components/schemas/CustomsContentTypes"
          },
          "non_delivery": {
            "$ref": "#/components/schemas/CustomsNonDelivery"
          },
          "buyer_shipping_amount_paid": {
            "required": [
              "currency",
              "amount"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Decimal currency value, as a string."
              },
              "currency": {
                "type": "string",
                "description": "Alpha-3 currency code complying with ISO 4217."
              }
            },
            "description": "Indicates how much the buyer paid for shipping, if any. This amount may be different than the shipping cost billed\r\nto the shipper.",
            "nullable": true
          },
          "duties_paid": {
            "required": [
              "currency",
              "amount"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Decimal currency value, as a string."
              },
              "currency": {
                "type": "string",
                "description": "Alpha-3 currency code complying with ISO 4217."
              }
            },
            "description": "The amount of duties paid by the shipper, if any. This is generally only necessary for DDP\r\n(bill_duties_to_sender) shipments.",
            "nullable": true
          },
          "bill_duties_to": {
            "$ref": "#/components/schemas/BillTo"
          },
          "declaration": {
            "type": "string",
            "description": "Declaration statement to be placed on the commercial invoice",
            "nullable": true
          },
          "terms_of_trade_code": {
            "$ref": "#/components/schemas/TermsOfTradeCode"
          },
          "importer_of_record": {
            "$ref": "#/components/schemas/ImporterOfRecord"
          },
          "invoice_additional_details": {
            "$ref": "#/components/schemas/CustomCharges"
          },
          "contents_explanation": {
            "type": "string",
            "description": "Text explanation for the content",
            "nullable": true
          },
          "export_declaration_number": {
            "type": "string",
            "description": "An EDN is a number which is nine alphanumeric characters long and issued by the Australian Customs (Australian Border Force) in exchange for the information that an exporter shares with them.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ManifestError": {
        "type": "object",
        "properties": {
          "manifest_request_shipment_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Manifest shipment request ID's associated with this error message",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ManifestRequestShipment": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippedShipment"
          }
        ],
        "properties": {
          "manifest_request_shipment_id": {
            "type": "string",
            "description": "Uniquely identifies this request to manifest a shipment. Used to identify which shipments could not be manifested.",
            "format": "uuid"
          },
          "ship_datetime": {
            "type": "string",
            "description": "Shipment ship date time.",
            "format": "date-time"
          },
          "reference": {
            "type": "string",
            "description": "Shipment reference number.",
            "nullable": true
          },
          "customs": {
            "$ref": "#/components/schemas/ManifestCustoms"
          }
        },
        "additionalProperties": false
      },
      "ManifestStatus": {
        "enum": [
          "unknown",
          "in_progress",
          "completed",
          "failed"
        ],
        "type": "string"
      },
      "NormalizeTrackingDataRequest": {
        "required": [
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "data": {
            "type": "string",
            "description": "The request's data, e.g. the body of the webhook http request",
            "nullable": true
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Headers sent with the inbound request if it was received via http",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the payload that is sent to normalize tracking data from inbound tracking data requests (e.g. webhooks)."
      },
      "NormalizeTrackingDataResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ],
        "properties": {
          "tracking_info": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackingInfo"
            },
            "description": "Collection of normalized tracking updates with one entry per package",
            "nullable": true
          },
          "update_method": {
            "$ref": "#/components/schemas/UpdateMethods"
          }
        },
        "additionalProperties": false,
        "description": "This model represents the successful response from a normalize tracking data request."
      },
      "OpeningTimes": {
        "required": [
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday",
          "sunday"
        ],
        "type": "object",
        "properties": {
          "monday": {
            "type": "string",
            "nullable": true
          },
          "tuesday": {
            "type": "string",
            "nullable": true
          },
          "wednesday": {
            "type": "string",
            "nullable": true
          },
          "thursday": {
            "type": "string",
            "nullable": true
          },
          "friday": {
            "type": "string",
            "nullable": true
          },
          "saturday": {
            "type": "string",
            "nullable": true
          },
          "sunday": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The times each day that the relay point is open, for example: \"11:00-13:00, 14:30-19:30\""
      },
      "Package": {
        "required": [
          "insured_value"
        ],
        "type": "object",
        "properties": {
          "package_code": {
            "type": "string",
            "description": "Package code defined for the carrier in ShipEngine.",
            "nullable": true
          },
          "content_description": {
            "type": "string",
            "description": "A summary of the content of a given package. Required to ship to and from Mexico.\r\nMaximum length of 35 characters.",
            "nullable": true
          },
          "dimension_details": {
            "$ref": "#/components/schemas/DimensionDetails"
          },
          "weight_details": {
            "$ref": "#/components/schemas/WeightDetails"
          },
          "insured_value": {
            "required": [
              "currency",
              "amount"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Decimal currency value, as a string."
              },
              "currency": {
                "type": "string",
                "description": "Alpha-3 currency code complying with ISO 4217."
              }
            },
            "description": "The insured value of this package.",
            "nullable": true
          },
          "label_messages": {
            "$ref": "#/components/schemas/LabelMessage"
          },
          "customs": {
            "$ref": "#/components/schemas/Customs"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Products"
            },
            "description": "List of products associated with this package.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents an individual package that is part of a shipment."
      },
      "PackageInstructionSectionEnum": {
        "enum": [
          "section_1",
          "section_2",
          "section_1A",
          "section_1B"
        ],
        "type": "string"
      },
      "PackagingGroupEnum": {
        "enum": [
          "i",
          "ii",
          "iii"
        ],
        "type": "string"
      },
      "PaperlessDetails": {
        "type": "object",
        "properties": {
          "instructions": {
            "type": "string",
            "nullable": true
          },
          "handoff_code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The Paperless details for the shipment. This consists of additional information for paperless labels."
      },
      "PickupConfirmation": {
        "type": "object",
        "properties": {
          "confirmation_id": {
            "type": "string",
            "description": "The primary confirmation ID for this request.",
            "nullable": true
          },
          "alternate_identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "description": "Other identifiers potentially needed in other calls.",
            "nullable": true
          },
          "shipment_identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentIdentifier"
            },
            "description": "List of the shipments added for this pickup.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model contains the confirmation information for a scheduled pickup."
      },
      "PickupContactDetails": {
        "required": [
          "first_name",
          "email",
          "phone_number"
        ],
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "The first name of the person who will be there for the pickup.",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the person who will be there for the pickup.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The e-mail address of the person who will be there for the pickup.",
            "nullable": true
          },
          "phone_number": {
            "type": "string",
            "description": "The phone number of the person who will be there for the pickup.",
            "nullable": true
          },
          "phone_number_extension": {
            "type": "string",
            "description": "The phone extension of the person who will be there for the pickup.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contact information for the person who will be present for the pickup."
      },
      "PickupLocationDetails": {
        "type": "object",
        "properties": {
          "pickup_address": {
            "$ref": "#/components/schemas/ShipFrom"
          },
          "location_notes": {
            "type": "string",
            "description": "Human readable location information for the driver to find the location",
            "nullable": true,
            "example": "Our loading dock is near the Denny's entrance."
          },
          "pickup_options": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Custom options that are used by the carrier to determine pickup locations",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the place where the pickup should occur"
      },
      "PickupShipmentDetails": {
        "type": "object",
        "properties": {
          "pickup_service_code": {
            "type": "string",
            "description": "Service category for the carrier (ground, express, next_day)",
            "nullable": true
          },
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShippedShipment"
            },
            "description": "The shipments that will be picked up",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contains information regarding the service code for the pickup request and the packages that will be picked up"
      },
      "PickupWindow": {
        "required": [
          "time_zone_iana",
          "pickup_date",
          "start_time",
          "end_time"
        ],
        "type": "object",
        "properties": {
          "time_zone_iana": {
            "type": "string",
            "description": "The local time zone represented in IANA. See https://www.iana.org/time-zones",
            "nullable": true,
            "example": "America/Chicago"
          },
          "pickup_date": {
            "type": "string",
            "description": "The local date the pickup will occur. Formatted per https://tools.ietf.org/html/rfc3339",
            "format": "date-time",
            "example": "2002-10-02T10:00:00-05:00"
          },
          "start_time": {
            "type": "string",
            "description": "The time relative to the time_zone_iana that the carrier says that the pickup could occur. Formatted per https://tools.ietf.org/html/rfc3339",
            "format": "date-time",
            "nullable": true,
            "example": "2002-10-02T10:00:00-05:00"
          },
          "end_time": {
            "type": "string",
            "description": "The end of the window when the pickup could be made relative to the time_zone_iana. Formatted per https://tools.ietf.org/html/rfc3339",
            "format": "date-time",
            "nullable": true,
            "example": "2002-10-02T10:00:00-05:00"
          }
        },
        "additionalProperties": false,
        "description": "This model represents a window of time a pickup could be made."
      },
      "Products": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A user specified free form string describing this customs item. If the field is absent the user has\r\nnot specified a description.",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "The user specified count of items in this declaration. This value should be 1 or greater",
            "format": "int32"
          },
          "value": {
            "required": [
              "currency",
              "amount"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Decimal currency value, as a string."
              },
              "currency": {
                "type": "string",
                "description": "Alpha-3 currency code complying with ISO 4217."
              }
            },
            "description": "The user specified declared customs value of this customs item. Generally, this value needs to be greater\r\nthan 0 to be accepted through customs.",
            "nullable": true
          },
          "country_of_origin": {
            "type": "string",
            "description": "The user specified declared country of origin of this customs item.",
            "nullable": true
          },
          "harmonized_tariff_code": {
            "type": "string",
            "description": "The user specified Harmonized Tariff Code. See https://hts.usitc.gov/ for more information.",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "description": "The user specified SKU of this customs item. This field is completely free form.",
            "nullable": true
          },
          "sku_description": {
            "type": "string",
            "description": "The user specified SKU description of this customs item. This field is completely free form.",
            "nullable": true
          },
          "item_weight": {
            "$ref": "#/components/schemas/WeightDetails"
          },
          "product_url": {
            "type": "string",
            "description": "A link to the item being shipped on the seller's website, used by customs officials\r\nto visually compare the item in the package to the available photo on the website.",
            "nullable": true
          },
          "vat_rate": {
            "type": "number",
            "description": "The VAT rate applicable to the item being shipped, expressed as a decimal value between 0 and 1.",
            "format": "double",
            "nullable": true
          },
          "mid_code": {
            "type": "string",
            "description": "The Manufacturer Identification Code (MID). It is ussed as an alternative to the full\r\nname and address of a manufacturer, shipper or exporter and is always required for\r\nU.S. formal customs entries.",
            "nullable": true
          },
          "dangerous_goods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DangerousGoods"
            },
            "description": "List of dangerous Goods model associated with this package passed to the carrier.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the product information for a single item."
      },
      "PudoLocation": {
        "required": [
          "postal_code",
          "country_code"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AddressWithContact"
          }
        ],
        "properties": {
          "carrier_code": {
            "type": "string",
            "description": "Standardized carrier code the location ID belongs to.",
            "nullable": true
          },
          "location_id": {
            "type": "string",
            "description": "Location ID necessary to lookup the location.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Pickup/Dropoff Location used by carriers that offer this service."
      },
      "Rate": {
        "type": "object",
        "properties": {
          "service_code": {
            "type": "string",
            "description": "The service code uniquely identifies a shipping service that you offer. Which service codes can be passed\r\nto you will be configured in ShipEngine.\r\nIf this field is missing, the rate will be discarded.",
            "nullable": true
          },
          "package_type": {
            "type": "string",
            "description": "The packaging used for the package.",
            "nullable": true
          },
          "ship_datetime": {
            "type": "string",
            "description": "When the package should ship for this rate to be valid. ** This differs from previous documentation\r\nFormatted per the https://tools.ietf.org/html/rfc3339 spec. Must be in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "estimated_delivery_datetime": {
            "type": "string",
            "description": "When the package(s) in this shipment are expected to arrive at their destination.\r\nFormatted per https://tools.ietf.org/html/rfc3339. Must be in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "billing_line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingLineItem"
            },
            "description": "Individual Billing Line items for the rate.",
            "nullable": true
          },
          "error_messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of discrete errors.",
            "nullable": true
          },
          "warning_messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of discrete warnings. This should be data the end user needs to be aware of.\r\nThese should not stop the request from succeeding, or a label being purchased with this rate.",
            "nullable": true
          },
          "negotiated_rate": {
            "type": "boolean",
            "description": "Whether these are negotiated rates."
          },
          "carrier_pickup_window": {
            "$ref": "#/components/schemas/TimeWindow"
          },
          "delivery_window": {
            "$ref": "#/components/schemas/TimeWindow"
          },
          "carrier_rate_id": {
            "type": "string",
            "description": "Unique identifier for the carrier rate",
            "nullable": true
          },
          "expiration_datetime": {
            "type": "string",
            "description": "DateTime after which the rate will no longer be accepted. (ISO 8601 format, with local offset)",
            "format": "date-time",
            "example": "2021-08-20T14:38:36.859237-05:00"
          },
          "estimated_delivery_text": {
            "type": "string",
            "description": "Estimated delivery text. It could be any text, a number, a date, etc.\r\nIf a number is sent, the UI appends \" days\"\r\n<example> If EstimatedDeliveryText is \"2\", the UI will display \"2 days\". ShipEngine does not append any text.</example><example> Monday by 11:00 PM</example>",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents a rate for a given service code."
      },
      "RawExternalSource": {
        "required": [
          "marketplace_code"
        ],
        "type": "object",
        "properties": {
          "marketplace_code": {
            "type": "string",
            "description": "Canonical representation of the fulfillment plan's and/or sales order's original source",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents a raw external source of information."
      },
      "RegisterRequest": {
        "required": [
          "registration_info",
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "registration_info": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            },
            "description": "This is a schemaless object used to contain any required fields for validating a users credentials or\r\nregistering a new account. These fields will be custom to the shipping service provider, and will be\r\ncollected via a form and sent over as key value pairs.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the body of a request used to register a new user within ShipEngine."
      },
      "RegisterResponse": {
        "required": [
          "credentials",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/Credentials"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            },
            "description": "This is an optional schemaless object that should be returned for persisted auth and user information.\r\nAnything returned under this key will be included in all future requests. For example, you may store\r\nadditional static properties about the end user or their connection to the carrier. The maximum\r\nstorage size for data under this key is 4KB.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the successful response for a registration request."
      },
      "RegulationLevelEnum": {
        "enum": [
          "lightly_regulated",
          "fully_regulated",
          "limited_quantities",
          "excepted_quantity"
        ],
        "type": "string"
      },
      "RelayPoint": {
        "required": [
          "opening_times",
          "relay_point_id",
          "address_lines",
          "city_locality",
          "state_province",
          "postal_code",
          "country_code"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/RelayPointAddress"
          }
        ],
        "properties": {
          "phone": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "opening_times": {
            "$ref": "#/components/schemas/OpeningTimes"
          }
        },
        "additionalProperties": false,
        "description": "Basic structure for a relay point"
      },
      "RelayPointAddress": {
        "required": [
          "relay_point_id",
          "address_lines",
          "city_locality",
          "state_province",
          "postal_code",
          "country_code"
        ],
        "type": "object",
        "properties": {
          "relay_point_id": {
            "type": "string",
            "nullable": true
          },
          "company_name": {
            "type": "string",
            "nullable": true
          },
          "address_lines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "city_locality": {
            "type": "string",
            "nullable": true
          },
          "state_province": {
            "type": "string",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The address information corresponding to a specific relay point"
      },
      "RelayPointDetails": {
        "required": [
          "ship_to",
          "ship_from"
        ],
        "type": "object",
        "properties": {
          "ship_to": {
            "$ref": "#/components/schemas/RelayPointAddress"
          },
          "ship_from": {
            "$ref": "#/components/schemas/RelayPointAddress"
          }
        },
        "additionalProperties": false,
        "description": "Details of the relay points used for the shipment"
      },
      "ResourceDownload": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "The public url where the created resource can be downloaded.",
            "nullable": true
          },
          "data": {
            "type": "string",
            "description": "The base64 encoded resource data.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Used for generic downloads, containing the resource itself or a link to where it can be found"
      },
      "ReturnLabelDetails": {
        "required": [
          "rma_number"
        ],
        "type": "object",
        "properties": {
          "rma_number": {
            "type": "string",
            "description": "A return merchandise authorization (RMA) is an associated number assigned to process the return, this\r\nnumber is often printed on the label, and used when the original shipper processes the inbound return.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Return Label Information (Added 1.13)"
      },
      "SchedulePickupRequest": {
        "required": [
          "requested_pickup_window",
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "location": {
            "$ref": "#/components/schemas/PickupLocationDetails"
          },
          "contact": {
            "$ref": "#/components/schemas/PickupContactDetails"
          },
          "pickup_details": {
            "$ref": "#/components/schemas/PickupShipmentDetails"
          },
          "requested_pickup_window": {
            "$ref": "#/components/schemas/PickupWindow"
          }
        },
        "additionalProperties": false,
        "description": "A request to schedule a pickup with a carrier"
      },
      "SchedulePickupResponse": {
        "required": [
          "pickup_windows"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ],
        "properties": {
          "confirmation": {
            "$ref": "#/components/schemas/PickupConfirmation"
          },
          "pickup_windows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PickupWindow"
            },
            "description": "A list of dates and times when the carrier intends to be available to pickup",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "description": "A custom message returned from the carrier",
            "nullable": true
          },
          "custom_properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "A grab bag of custom properties that will be persisted and sent back with the cancel pickup request",
            "nullable": true
          },
          "billing_line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingLineItem"
            },
            "description": "Individual Billing Line items for the rate.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The response for scheduling a pickup."
      },
      "SearchRadius": {
        "type": "object",
        "properties": {
          "radius_in_miles": {
            "type": "number",
            "description": "Search radius in miles",
            "format": "double",
            "nullable": true
          },
          "radius_in_kilometers": {
            "type": "number",
            "description": "Search radius in kilometers",
            "format": "double",
            "nullable": true
          },
          "source_radius": {
            "type": "number",
            "description": "Search radius in the original dimensions",
            "format": "double",
            "nullable": true
          },
          "source_radius_unit": {
            "$ref": "#/components/schemas/SearchRadiusUnit"
          }
        },
        "additionalProperties": false
      },
      "SearchRadiusUnit": {
        "enum": [
          "miles",
          "kilometers"
        ],
        "type": "string"
      },
      "Service": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code specific to a shipping provider service.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of this shipping provider service.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A shipping provider specific service."
      },
      "ServicePoint": {
        "type": "object",
        "properties": {
          "service_point_id": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/ServicePointResponseAddress"
          },
          "hours_of_operation": {
            "$ref": "#/components/schemas/WeeklyHoursOfOperation"
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServicePointFeature"
            },
            "nullable": true
          },
          "temporary_closures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfOperation"
            },
            "nullable": true
          },
          "special_opening_times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpecialOpeningTime"
            },
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ServicePointLocationType"
          }
        },
        "additionalProperties": false
      },
      "ServicePointAddress": {
        "required": [
          "postal_code",
          "country_code"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AddressBase"
          }
        ],
        "properties": {
          "geo": {
            "$ref": "#/components/schemas/LatLong"
          }
        },
        "additionalProperties": false
      },
      "ServicePointFeature": {
        "enum": [
          "drop_off_point",
          "pickup_point",
          "print_services",
          "after_hours_locker",
          "after_hours_dropbox"
        ],
        "type": "string"
      },
      "ServicePointLocationType": {
        "enum": [
          "pudo",
          "locker"
        ],
        "type": "string"
      },
      "ServicePointResponseAddress": {
        "required": [
          "postal_code",
          "country_code"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ServicePointAddress"
          }
        ],
        "properties": {
          "phone_number": {
            "type": "string",
            "description": "The phone number of the contact associated with the address",
            "nullable": true
          },
          "company_name": {
            "type": "string",
            "description": "The name of the company associated with this address.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the location",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServicePointShipment": {
        "type": "object",
        "properties": {
          "total_weight": {
            "$ref": "#/components/schemas/WeightDetails"
          }
        },
        "additionalProperties": false
      },
      "ShipFrom": {
        "required": [
          "postal_code",
          "country_code"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AddressWithContact"
          }
        ],
        "properties": {
          "tax_identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxIdentifier"
            },
            "description": "Tax IDs associated with the exporter.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The shipment sender's address. It may or may not have been validated."
      },
      "ShipFromDisplay": {
        "required": [
          "postal_code",
          "country_code"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AddressWithContact"
          }
        ],
        "additionalProperties": false,
        "description": "The address that should be displayed as the return address, only if the shipping provider supports\r\nthis functionality."
      },
      "ShipTo": {
        "required": [
          "postal_code",
          "country_code"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AddressWithContact"
          }
        ],
        "properties": {
          "tax_identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxIdentifier"
            },
            "description": "Tax IDs associated with the consignee.",
            "nullable": true
          },
          "geolocation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geolocation"
            },
            "description": "List of Geolocation objects to help identify the location.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShipmentIdentifier": {
        "type": "object",
        "properties": {
          "tracking_number": {
            "type": "string",
            "description": "The tracking number associated with the shipment",
            "nullable": true
          },
          "alternate_identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "description": "A list of alternate identifiers that can be used to identify a shipment",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents identifying information about a shipment."
      },
      "ShippedPackage": {
        "type": "object",
        "properties": {
          "tracking_number": {
            "type": "string",
            "description": "The carrier tracking number associated with this package",
            "nullable": true
          },
          "tracking_url": {
            "type": "string",
            "description": "The carrier tracking URL associated with this package",
            "nullable": true
          },
          "alternative_identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "description": "Alternative identifiers associated with this package",
            "nullable": true
          },
          "dimension_details": {
            "$ref": "#/components/schemas/DimensionDetails"
          },
          "weight_details": {
            "$ref": "#/components/schemas/WeightDetails"
          },
          "package_code": {
            "type": "string",
            "description": "The code associated with the package type",
            "nullable": true
          },
          "label_messages": {
            "$ref": "#/components/schemas/LabelMessage"
          },
          "customs": {
            "$ref": "#/components/schemas/Customs"
          },
          "insured_value": {
            "required": [
              "currency",
              "amount"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Decimal currency value, as a string."
              },
              "currency": {
                "type": "string",
                "description": "Alpha-3 currency code complying with ISO 4217."
              }
            },
            "description": "The insured value of this package.",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShippedProducts"
            },
            "description": "List of products associated with this package.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This is the model for a package that has had a label generated for it"
      },
      "ShippedProducts": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A user specified free form string describing this customs item. If the field is absent the user has\r\nnot specified a description.",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "The user specified count of items in this declaration. This value should be 1 or greater",
            "format": "int32"
          },
          "value": {
            "required": [
              "currency",
              "amount"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Decimal currency value, as a string."
              },
              "currency": {
                "type": "string",
                "description": "Alpha-3 currency code complying with ISO 4217."
              }
            },
            "description": "The user specified declared customs value of this customs item. Generally, this value needs to be greater\r\nthan 0 to be accepted through customs.",
            "nullable": true
          },
          "country_of_origin": {
            "type": "string",
            "description": "The user specified declared country of origin of this customs item.",
            "nullable": true
          },
          "harmonized_tariff_code": {
            "type": "string",
            "description": "The user specified Harmonized Tariff Code. See https://hts.usitc.gov/ for more information.",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "description": "The user specified SKU of this customs item. This field is completely free form.",
            "nullable": true
          },
          "sku_description": {
            "type": "string",
            "description": "The user specified SKU description of this customs item. This field is completely free form.",
            "nullable": true
          },
          "item_weight": {
            "$ref": "#/components/schemas/WeightDetails"
          },
          "product_url": {
            "type": "string",
            "description": "A link to the item being shipped on the seller's website, used by customs officials\r\nto visually compare the item in the package to the available photo on the website.",
            "nullable": true
          },
          "vat_rate": {
            "type": "number",
            "description": "The VAT rate applicable to the item being shipped, expressed as a decimal value between 0 and 1.",
            "format": "double",
            "nullable": true
          },
          "mid_code": {
            "type": "string",
            "description": "The Manufacturer Identification Code (MID). It is ussed as an alternative to the full\r\nname and address of a manufacturer, shipper or exporter and is always required for\r\nU.S. formal customs entries.",
            "nullable": true
          },
          "dangerous_goods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DangerousGoods"
            },
            "description": "List of dangerous Goods model associated with this package passed to the carrier.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the product of a package that has had a label generated for it"
      },
      "ShippedShipment": {
        "type": "object",
        "properties": {
          "tracking_number": {
            "type": "string",
            "description": "The carrier tracking number for this shipment",
            "nullable": true
          },
          "ship_to": {
            "$ref": "#/components/schemas/ShipTo"
          },
          "alternative_identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "description": "Alternative identifiers associated with this package",
            "nullable": true
          },
          "service_code": {
            "type": "string",
            "description": "The service code used for this shipment",
            "nullable": true
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShippedPackage"
            },
            "description": "The list of packages associated with this shipment",
            "nullable": true
          },
          "advanced_options": {
            "$ref": "#/components/schemas/AdvancedOptions"
          },
          "pickup_location": {
            "$ref": "#/components/schemas/PudoLocation"
          }
        },
        "additionalProperties": false,
        "description": "This model represents a shipment that has already been shipped, and contains\r\nsummary information about the shipment."
      },
      "SpecialOpeningTime": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "description": "The start date expressed in ISO 8601 date only format",
            "nullable": true,
            "example": "2024-01-25"
          },
          "end": {
            "type": "string",
            "description": "The end date expressed in ISO 8601 date only format",
            "nullable": true,
            "example": "2024-01-27"
          },
          "hours_of_operation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HoursOfOperation"
            },
            "description": "The opening hours",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StandardizedStatusCodes": {
        "enum": [
          "UN",
          "AC",
          "IT",
          "DE",
          "EX",
          "AT",
          "NY",
          "SP"
        ],
        "type": "string",
        "description": "This represents the ShipEngine supported status codes for a shipment.\r\nUN - Unknown\r\nAC - Accepted\r\nIT - In Transit\r\nDE - Delivered\r\nEX - Exception\r\nAT - Delivery Attempted\r\nNY - Not Yet In System\r\nSP - Delivered To The Collection Location"
      },
      "TaxIdentificationType": {
        "enum": [
          "tin",
          "ein",
          "ssn",
          "vat",
          "eori",
          "ioss",
          "pan",
          "voec",
          "pccc",
          "oss",
          "passport",
          "abn",
          "nif",
          "inn",
          "cpf",
          "cnpj"
        ],
        "type": "string",
        "description": "Specifies the supported tax identification types."
      },
      "TaxIdentifier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identification number.",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/TaxIdentificationType"
          },
          "registration_country": {
            "type": "string",
            "description": "The country where the Tax ID is registered with.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the tax ID that may give the customs agent more context.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Entity representing a Tax Identification number, type, and country of registration."
      },
      "TermsOfTradeCode": {
        "enum": [
          "exw",
          "fca",
          "cpt",
          "cip",
          "dpu",
          "dap",
          "ddp",
          "fas",
          "fob",
          "cfr",
          "cif",
          "ddu",
          "daf",
          "deq",
          "des"
        ],
        "type": "string",
        "description": "Specifies the supported terms of trade code (incoterms)"
      },
      "TimeWindow": {
        "type": "object",
        "properties": {
          "time_zone_iana": {
            "type": "string",
            "description": "The local time zone represented in IANA. See https://www.iana.org/time-zones",
            "nullable": true,
            "example": "America/Chicago"
          },
          "start_window": {
            "type": "string",
            "description": "The start of the window when the pickup could be made relative to the time_zone_iana. (ISO 8601 format, with local offset)",
            "format": "date-time",
            "nullable": true,
            "example": "2021-08-20T14:38:36.859237-05:00"
          },
          "end_window": {
            "type": "string",
            "description": "The end of the window when the pickup could be made relative to the time_zone_iana. (ISO 8601 format, with local offset)",
            "format": "date-time",
            "nullable": true,
            "example": "2021-08-20T18:38:36.859237-05:00"
          }
        },
        "additionalProperties": false
      },
      "TrackEvent": {
        "type": "object",
        "properties": {
          "event_datetime": {
            "type": "string",
            "description": "When this tracking event occurred. Formatted per https://tools.ietf.org/html/rfc3339. Must be in UTC.",
            "format": "date-time"
          },
          "event_datetime_local": {
            "type": "string",
            "description": "Most providers do not provide tracking events in UTC, and without time zone or geo information its hard to deduce.",
            "format": "date-time",
            "nullable": true
          },
          "event_code": {
            "type": "string",
            "description": "Carrier's specific event code",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the package status at this event",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City or Locality for this event",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State or Province for this event",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "description": "Postal Code for this event",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country for this event",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "signer": {
            "type": "string",
            "description": "If the event had a signer associated, normally on delivery",
            "nullable": true
          },
          "geo": {
            "$ref": "#/components/schemas/LatLong"
          },
          "status_code": {
            "$ref": "#/components/schemas/StandardizedStatusCodes"
          }
        },
        "additionalProperties": false,
        "description": "This model represents a tracking event for a shipment."
      },
      "TrackingAttribute": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents attributes from the shipping provider about a shipment necessary for tracking."
      },
      "TrackingIdentifier": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The tracking identifier type, either `tracking_number` or `carrier_transaction_id`.",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "The value associated with that key.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents a key value pair for identifying a shipment for tracking."
      },
      "TrackingInfo": {
        "required": [
          "standardized_status_code"
        ],
        "type": "object",
        "properties": {
          "carrier_name": {
            "type": "string",
            "description": "The human readable name of the carrier tracking this shipment.",
            "nullable": true
          },
          "tracking_number": {
            "type": "string",
            "description": "The carrier specific tracking identifier for this shipment.",
            "nullable": true
          },
          "standardized_status_code": {
            "$ref": "#/components/schemas/StandardizedStatusCodes"
          },
          "carrier_status_code": {
            "type": "string",
            "description": "The carrier specific status code of this shipment's tracking status.",
            "nullable": true
          },
          "carrier_status_description": {
            "type": "string",
            "description": "The human readable description of this shipment's tracking status.",
            "nullable": true
          },
          "shipped_datetime": {
            "type": "string",
            "description": "When the package(s) in this shipment were turned over to the carrier. Formatted per https://tools.ietf.org/html/rfc3339. Must be in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "estimated_delivery_datetime": {
            "type": "string",
            "description": "When the package(s) in this shipment are expected to arrive at their destination. Formatted per https://tools.ietf.org/html/rfc3339. Must be in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "actual_delivery_datetime": {
            "type": "string",
            "description": "When the package(s) in this shipment arrived at their destination. Formatted per https://tools.ietf.org/html/rfc3339. Must be in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "shipping_problem_description": {
            "type": "string",
            "description": "A human readable description of why the shipment is in an error state.",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "description": "The weight measured by the carrier of the package(s) in this shipment.",
            "format": "double",
            "nullable": true
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "service": {
            "$ref": "#/components/schemas/Service"
          },
          "packaging": {
            "type": "string",
            "description": "The carrier observed count of packages in this shipment.",
            "nullable": true
          },
          "package_count": {
            "type": "integer",
            "description": "The carrier observed count of packages in this shipment.",
            "format": "int32",
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackEvent"
            },
            "nullable": true
          },
          "shipping_problem": {
            "type": "boolean",
            "description": "Whether or not this shipment has entered an error state."
          },
          "shipping_problem_code": {
            "type": "string",
            "description": "The unique identifying code for the type of error encountered by this shipment.",
            "nullable": true
          },
          "error_description": {
            "type": "string",
            "description": "The human readable explanation of the error encountered by this shipment.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents tracking information for a shipment."
      },
      "TrackingRequest": {
        "required": [
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackingIdentifier"
            },
            "description": "This array represents the custom identifiers for a carrier.",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackingAttribute"
            },
            "description": "Extra attributes of a shipment needed in tracking",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the payload that is sent to request tracking information."
      },
      "TrackingResponse": {
        "required": [
          "tracking_info"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ],
        "properties": {
          "tracking_info": {
            "$ref": "#/components/schemas/TrackingInfo"
          }
        },
        "additionalProperties": false,
        "description": "This model represents the successful response from a tracking request."
      },
      "TransportMeanEnum": {
        "enum": [
          "ground",
          "water",
          "cargo_aircraft_only",
          "passenger_aircraft"
        ],
        "type": "string"
      },
      "UpdateMethods": {
        "enum": [
          "append",
          "replace"
        ],
        "type": "string"
      },
      "UpdateSettingsRequest": {
        "required": [
          "update_settings",
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "update_settings": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            },
            "description": "This is a schemaless object used to contain any required fields for updating carrier settings.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the body of a request used to update carrier settings within ShipEngine."
      },
      "UpdateSettingsResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ],
        "additionalProperties": false,
        "description": "This model represents the successful response for updating carrier settings request."
      },
      "ValidateInboundDataRequest": {
        "required": [
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "data": {
            "type": "string",
            "description": "The request's data, e.g. the body of the webhook http request",
            "nullable": true
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Headers sent with the inbound request if it was received via http",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the payload that is sent to validate inbound data requests (e.g. webhooks) and determine\r\nwhat type information is contained in the data."
      },
      "ValidateInboundDataResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ],
        "properties": {
          "content_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InboundDataContentTypes"
            },
            "description": "Types of content included in the inbound data",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the successful response from a validate inbound data request."
      },
      "ValidateShipmentError": {
        "type": "object",
        "properties": {
          "field_name": {
            "type": "string",
            "description": "This is validated field name.",
            "nullable": true,
            "example": "ship_to.postal_code"
          },
          "field_value": {
            "type": "string",
            "description": "This is a validated field value.",
            "nullable": true,
            "example": "85001"
          },
          "carrier_error_code": {
            "$ref": "#/components/schemas/ValidationErrorCodes"
          },
          "message": {
            "type": "string",
            "description": "A user friendly message about this error.",
            "nullable": true,
            "example": "Receiver postal code cannot be null"
          }
        },
        "additionalProperties": false,
        "description": "This model represented a validation error"
      },
      "ValidateShipmentRequest": {
        "required": [
          "service_code",
          "ship_datetime",
          "is_return_label",
          "is_residential",
          "packages",
          "ship_to",
          "ship_from",
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateLabelRequest"
          }
        ],
        "additionalProperties": false
      },
      "ValidateShipmentResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ],
        "properties": {
          "validation_errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidateShipmentError"
            },
            "description": "This is the validation results list contains list of carrier data constrain issues for requested service.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the successful response from carrier validate shipment data request."
      },
      "ValidationErrorCodes": {
        "enum": [
          "unspecified",
          "field_value_required",
          "invalid_field_value",
          "invalid_string_length",
          "invalid_date",
          "return_label_not_supported"
        ],
        "type": "string",
        "description": "A list of standard validation error identifiers for errors the module can return"
      },
      "VoidLabelsRequest": {
        "required": [
          "void_requests",
          "transaction_id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ],
        "properties": {
          "void_requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoidRequest"
            },
            "description": "Requests to void labels.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the payload sent to void a set of labels."
      },
      "VoidLabelsResponse": {
        "required": [
          "void_responses"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ],
        "properties": {
          "void_responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoidResponse"
            },
            "description": "Responses to void a particular label.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the successful attempt to void a set of labels."
      },
      "VoidRequest": {
        "required": [
          "void_request_id",
          "ship_from"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippedShipment"
          }
        ],
        "properties": {
          "void_request_id": {
            "type": "string",
            "description": "Uniquely identifies this request to void a label. Must be returned in a void response.",
            "format": "uuid"
          },
          "ship_from": {
            "$ref": "#/components/schemas/ShipFrom"
          }
        },
        "additionalProperties": false,
        "description": "A request to void a particular label."
      },
      "VoidResponse": {
        "required": [
          "void_request_id"
        ],
        "type": "object",
        "properties": {
          "void_request_id": {
            "type": "string",
            "description": "This unique identifier should be related to the void_request_id in the VoidLabelsRequest.",
            "format": "uuid"
          },
          "message": {
            "type": "string",
            "description": "User facing text describing the void process. May be left blank to present a default value.",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of errors preventing this label from being voided. If no errors are returned the void is considered\r\nsuccessful. If any errors are returned the void is considered failed.",
            "nullable": true
          },
          "billing_line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingLineItem"
            },
            "description": "Individual Billing Line items which remain after voiding the label, e.g. a cancellation fee.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This model represents the success or failure of an individual label being voided."
      },
      "WeeklyHoursOfOperation": {
        "type": "object",
        "properties": {
          "monday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HoursOfOperation"
            },
            "nullable": true
          },
          "tuesday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HoursOfOperation"
            },
            "nullable": true
          },
          "wednesday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HoursOfOperation"
            },
            "nullable": true
          },
          "thursday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HoursOfOperation"
            },
            "nullable": true
          },
          "friday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HoursOfOperation"
            },
            "nullable": true
          },
          "saturday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HoursOfOperation"
            },
            "nullable": true
          },
          "sunday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HoursOfOperation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeightDetails": {
        "type": "object",
        "properties": {
          "weight_in_ounces": {
            "type": "number",
            "description": "The weight in ounces rounded to the fourth decimal place.",
            "format": "double"
          },
          "weight_in_grams": {
            "type": "number",
            "description": "The weight in grams rounded to the fourth decimal place.",
            "format": "double"
          },
          "source_weight": {
            "type": "number",
            "description": "The weight in its original unit of measurement rounded to the fourth decimal place.",
            "format": "double"
          },
          "source_weight_unit": {
            "$ref": "#/components/schemas/WeightUnit"
          }
        },
        "additionalProperties": false,
        "description": "This model represents the weight of a package in its original unit, ounces, and grams."
      },
      "WeightUnit": {
        "enum": [
          "grams",
          "ounces",
          "kilograms",
          "pounds"
        ],
        "type": "string",
        "description": "This model describes the possible units of weight."
      }
    }
  },
  "tags": [
    {
      "name": "Account Setup",
      "description": ""
    },
    {
      "name": "Validations",
      "description": ""
    },
    {
      "name": "Rating",
      "description": ""
    },
    {
      "name": "Relay Points",
      "description": "Relay points are the ship from/to locations used with Pickup/Drop Off (PUDO) shipments"
    },
    {
      "name": "Service Points",
      "description": "Service points are locations where packages can be picked up or dropped off, similar to relay points."
    },
    {
      "name": "Labels",
      "description": ""
    },
    {
      "name": "Tracking",
      "description": ""
    },
    {
      "name": "Manifesting",
      "description": ""
    },
    {
      "name": "Scheduled Pickups",
      "description": ""
    },
    {
      "name": "Shipment Notifications",
      "description": "Shipment notifications were designed to notify a Pickup/Drop Off (PUDO) provider that a parcel is enroute to their location.  These endpoints allow for carrier agnostic PUDO locations to expect and plan for the arrival of the parcel."
    },
    {
      "name": "Normalize Inbound Data",
      "description": "Given inbound data, such as a webhook with tracking updates, return normalized information."
    }
  ]
}