"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateLabelRequest = void 0;
const base_request_1 = require("./base-request");
/** @description Basic structure for a request to create a label */
class CreateLabelRequest extends base_request_1.BaseRequest {
    service_code;
    ship_datetime;
    confirmation;
    label_format;
    label_layout;
    /** @description Whether the request is for a test */
    is_test_label;
    /** @description Any additional options a shipment may require, including custom options */
    advanced_options;
    insurance_provider;
    /** @description Whether the shipment is a return */
    is_return_label;
    packages;
    ship_to;
    ship_from;
    pickup_location;
    relay_points;
    ship_from_display;
    /** @description Whether the shipment requires next day shipping */
    next_day;
    /** @description Whether the shipment is international */
    international;
    reference;
    return_details;
    fulfillment_plan_details;
    attachments;
    /** @description The carrier pickup window is the time designated when the carrier will pickup your package from the initial location */
    carrier_pickup_window;
    /** @description Unique identifier for the carrier rate */
    carrier_rate_id;
    /** @description Display schemes that the label will be returned in. Label is returned by default */
    display_schemes;
    customs;
    /** @description Bill the shipping charges to this entity. If null, it should be assumed the "shipper" is responsible for the shipping charges. */
    bill_shipping_to;
}
exports.CreateLabelRequest = CreateLabelRequest;
//# sourceMappingURL=create-label-request.js.map